{"version":3,"sources":["node_modules/browser-pack/_prelude.js","LancerFrame.js","src/_/_.js","src/component/component.js","src/controller/$directives-data-sync.js","src/controller/controller.js","src/directives/directive.js","src/directives/internal-directives.js","src/dom-init/_main.js","src/main.js","src/service/internal-service.js","src/service/service.js","src/static-func/_main.js","src/static-func/css.js","src/static-func/get-directives.js","src/static-func/log.js","src/static-func/observe.js","src/static-func/on-off.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Object","defineProperty","value","_","typeof","_typeof","target","prototype","toString","match","replace","toLowerCase","browser","result","navigator","appVersion","window","ScriptEngine","indexOf","strip","str","RegExp","findFilter","directive","removeFilter","substr","getAttrs","element","attrs","attributes","name",2,"component","_2","_classCallCheck","instance","Constructor","TypeError","$lc","components","componentName","options","$init","errorHandler","$done","$destroy","_class","this","$name","$template","scope","console","log","destoryFunc","type","error","../_/_",3,"$directivesDataSync","expr","oldValue","newValue","$directives","forEach","directiveObj","index","$expr","$update",4,"controller","undefined","controllers","ctrlName","dependencies","initFunc","$initFunc","$dependencies",5,"_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","directives","$element","$scope","$directiveName","_$done","_$update","apply","arguments","_$destroy","$removeDirective","removeAttribute","priority",6,"internalDirectives","setInnterText","textContent","innerText","func","innerHTML","_this","self","imeIgnored","duplexIgnored","on","addEventListener","inputEvent","BROWSER","setTimeout","event","keyCode","initEvent","eventType","updateEvent","newFunc","off","$delegatedElement","$targets","querySelectorAll","$clickEvent","srcElement","targetThis","targetChecking","found","parentNode",7,"domInit","_$directivesDataSync","_loop","hasOwnProperty","ctrl","$ctrlDoms","document","dependency","services","concat","prop","observe","_loop2","directivesOfCtrl","getDirectives","initController","setAttribute","_ret","ctrlDom","initChilden","ctrlChildren","child","tagName","componentObj","directiveList","_i","_length","push","children","../controller/$directives-data-sync",8,"_main","_controller","_directive","_service","_component","_internalDirectives","_internalService","_main2","root","VERSION","AUTHOR","setStaticFunc","service","inited","initAfterDomReady","readyState","LancerFrame","internalSerivces","./_/_","./component/component","./controller/controller","./directives/directive","./directives/internal-directives","./dom-init/_main","./service/internal-service","./service/service","./static-func/_main",9,"Promise","asyncFunc","resolve","reject","get","url","data","post","jsonp","callbackName","callback",10,11,"_observe","_getDirectives","_css","_onOff","_log","staticFunc","css","./css","./get-directives","./log","./observe","./on-off",12,"style",13,"directiveName","sortTime","swap",14,"success","caution","info",15,"obj","getCallback","setCallback","propKey","propValue","errorText","set","newVal",16,"eventHanler","useCapture","attachEvent","removeEventListener","detachEvent"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAC,UAAA,YAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,GAAAL,SAAAD,UAAA,YAAAA,OAAA,KAAA,GAAAH,GAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,MAAAa,GAAA,SAAAT,QAAAU,OAAAJ,SCCA,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MCCJ,IAAMC,GAAAR,QAAAQ,GACTC,SAAQ,QAAAC,SAACC,QAAD,MAAYN,QAAOO,UAAUC,SAASZ,KAAKU,QAAQG,MAAM,SAAS,GAAGC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIC,eAC/GC,QAAS,QAAAA,WACL,GAAIC,QAAS,EACb,IAAMD,SAAUE,UAAUC,UAG1B,IAAIC,OAAOC,cAAgBL,QAAQM,QAAQ,YAAc,EAAG,CAExD,GAAIN,QAAQM,QAAQ,aAAe,EAAGL,OAAS,MAG/C,IAAID,QAAQM,QAAQ,cAAgB,GAAMN,QAAQM,QAAQ,gBAAkB,GAAKN,QAAQM,QAAQ,YAAc,EAAIL,OAAS,WAG5H,IAAID,QAAQM,QAAQ,SAAW,EAAGL,OAAS,WACxC,IAAID,QAAQM,QAAQ,YAAc,EAAG,CACxCL,OAAS,SAGb,MAAOA,SAEXM,MAAO,QAAAA,OAACC,IAAKd,QAAN,MAAiBc,KAAIV,QAAQ,GAAIW,QAAJ,GAAcf,OAAU,KAAM,KAGlEgB,WAAY,QAAAA,YAAAC,WACRA,UAAYpB,EAAEgB,MAAMI,UAAW,IAC/BA,WAAYA,UAAUd,MAAM,QAC5B,IAAIN,EAAEC,OAAOmB,aAAe,SAAWA,UAAU,GAAIA,UAAYA,UAAU,GAAGb,QAAQ,IAAK,GAC3F,OAAOa,YAIXC,aAAc,QAAAA,cAAAD,WAAA,MAAaA,WAAUE,OAAO,EAAGF,UAAUL,QAAQ,KAAO,IAGxEQ,SAAU,QAAAA,UAAAC,SACN,GAAId,UACJ,IAAIe,OAAQD,QAAQE,UACpB,KAAK,GAAIvC,GAAI,EAAGO,OAAS+B,MAAM/B,OAAQP,EAAIO,OAAQP,IAAK,CACpDuB,OAAOe,MAAMtC,GAAGwC,MAAQF,MAAMtC,GAAGY,MAErC,MAAOW,eDgBTkB,GAAG,SAAS1C,QAAQU,OAAOJ,SACjC,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SE5DgBqC,UAAAA,SAFhB,IAAAC,IAAA5C,QAAA,SFkEA,SAAS6C,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAc,CAAE,KAAM,IAAIC,WAAU,sCEhEzG,QAASL,WAAWM,KAEvBA,IAAIC,aAEJD,KAAIN,UAAY,SAAUQ,cAAeC,SAUrC,GAAIA,QAAQC,OAAST,GAAA9B,EAAEC,OAAOqC,QAAQC,SAAW,WAAY,CACzDC,aAAa,QACb,OAAO,OAGX,GAAIF,QAAQG,OAASX,GAAA9B,EAAEC,OAAOqC,QAAQG,SAAW,WAAY,CACzDD,aAAa,QACb,OAAO,OAGX,GAAIF,QAAQI,UAAYZ,GAAA9B,EAAEC,OAAOqC,QAAQI,YAAc,WAAY,CAC/DF,aAAa,WACb,OAAO,OAGXL,IAAIC,WAAWC,eAAf,WACI,QAAAM,UAAeZ,gBAAAa,KAAAD,OACXC,MAAKC,MAAQR,aACbO,MAAKE,UAAYR,QAAQQ,WAAa,EAEtCF,MAAKL,MAAQ,SAACf,QAASuB,OAInBC,QAAQC,IAAInB,GAAA9B,EAAEuB,SAASC,SAEvBc,SAAQC,OAASD,QAAQC,MAAMf,QAASuB,OAG5CH,MAAKH,MAAQ,SAACjB,QAASuB,OACnBT,QAAQG,OAASH,QAAQG,MAAMjB,QAASuB,OAG5CH,MAAKF,SAAWQ,YAlBxB,MAAAP,WAwBJ,SAASO,eACLF,QAAQC,IAAI,iBAGhB,QAAST,cAAcW,MACnBhB,IAAIc,IAAIG,MAAR,YAA0BD,KAA1B,yBF8ELE,SAAS,IAAIC,GAAG,SAASpE,QAAQU,OAAOJ,SAC3C,YAEAK,QAAOC,eAAeN,QAAS,cAC7BO,MAAO,MAETP,SG/IgB+D,oBAAAA,mBAAT,SAASA,qBAAqBR,MAAOS,KAAMC,SAAUC,UACxDV,QAAQC,IAAOF,MAAMF,MAArB,IAA8BW,KAA9B,MAAwCC,SAAxC,QAAwDC,SACxDX,OAAMY,YAAYC,QAAQ,SAACC,aAAcC,MAAOH,aAAtB,MAAsCE,cAAaE,QAAUP,MAAQK,aAAaG,QAAQN,kBH6JlHO,GAAG,SAAS/E,QAAQU,OAAOJ,SACjC,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SAAQ0E,WAAaC,SI1KrB,IAAArC,IAAA5C,QAAA,SJ8KAM,SI7KQ0E,WAAAA,UAIR,SAASA,YAAY/B,KACjB,YAEAA,KAAIiC,cACJjC,KAAI+B,WAAa,SAAUG,SAAUC,aAAcC,UAE/C,GAAIzC,GAAA9B,EAAEC,OAAOqE,gBAAkB,QAAS,CACpCC,SAAWD,YACXA,iBAKJnC,IAAIiC,YAAYC,WACZxB,MAAOwB,SACPG,UAAWD,SACXE,cAAeH,kBJqLxBjB,SAAS,IAAIqB,GAAG,SAASxF,QAAQU,OAAOJ,SAC3C,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SAAQ4B,UAAY+C,SAEpB,IAAIQ,cAAe,WAAc,QAASC,kBAAiBzE,OAAQ0E,OAAS,IAAK,GAAI1F,GAAI,EAAGA,EAAI0F,MAAMnF,OAAQP,IAAK,CAAE,GAAI2F,YAAaD,MAAM1F,EAAI2F,YAAWC,WAAaD,WAAWC,YAAc,KAAOD,YAAWE,aAAe,IAAM,IAAI,SAAWF,YAAYA,WAAWG,SAAW,IAAMpF,QAAOC,eAAeK,OAAQ2E,WAAWI,IAAKJ,aAAiB,MAAO,UAAU7C,YAAakD,WAAYC,aAAe,GAAID,WAAYP,iBAAiB3C,YAAY7B,UAAW+E,WAAa,IAAIC,YAAaR,iBAAiB3C,YAAamD,YAAc,OAAOnD,gBK/MhiB,IAAAH,IAAA5C,QAAA,SLuNA,SAAS6C,iBAAgBC,SAAUC,aAAe,KAAMD,mBAAoBC,cAAc,CAAE,KAAM,IAAIC,WAAU,sCAEhH1C,QKvNS4B,UAAAA,SAET,SAASA,WAAWe,KAChBA,IAAIkD,aAGJlD,KAAIf,UAAY,SAAUO,KAAMW,SAY5B,GAAIR,GAAA9B,EAAEC,OAAO0B,QAAU,SAAU,CAC7B,KAAM,IAAItC,OAAJ,wBAOV8C,IAAIkD,WAAW,MAAQ1D,MAAvB,WACI,QAAAgB,QAAanB,QAASuB,OAAOhB,gBAAAa,KAAAD,OACzBC,MAAK0C,SAAW9D,OAChBoB,MAAK2C,OAASxC,KACdH,MAAK4C,eAAL,MAA4B7D,IAC5BiB,MAAKmB,MAAQnB,KAAK0C,SAAS5D,WAAWkB,KAAK4C,gBAAgBzF,KAE3DuC,SAAQC,OAASD,QAAQC,MAAM9C,KAAKmD,KAAMA,KAAK0C,SAAU1C,KAAKG,MAG9D,IAAIT,QAAQG,MAAO,CACf,GAAIgD,QAAS7C,KAAKH,KAClBgD,QAAOhG,KAAKmD,KACZN,SAAQG,MAAMhD,KAAKmD,UAChB,CACHA,KAAKH,MAAMhD,KAAKmD,MAGpB,GAAIN,QAAQ0B,QAAS,CACjB,GAAI0B,UAAW9C,KAAKoB,OACpBpB,MAAKoB,QAAU,WACX0B,SAASjG,KAAKmD,KACdN,SAAQ0B,QAAQ2B,MAAM/C,KAAMgD,YAIpC,GAAItD,QAAQI,SAAU,CAClB,GAAImD,WAAYjD,KAAKF,QACrBE,MAAKF,SAAW,WACZmD,UAAUpG,KAAKmD,KACfN,SAAQI,SAASiD,MAAM/C,KAAMgD,YAIrChD,KAAKkD,mBAlCbnB,aAAAhC,SAAAuC,IAAA,QAAAnF,MAAA,QAAA0C,aAAAyC,IAAA,UAAAnF,MAAA,QAAAiE,eAAAkB,IAAA,WAAAnF,MAAA,QAAA2C,gBAAAwC,IAAA,mBAAAnF,MAAA,QAAA+F,oBAkDQlD,KAAK0C,SAASS,gBAAgBnD,KAAK4C,mBAlD3C,OAAA7C,UAyDAR,KAAIkD,WAAW,MAAQ1D,MAAMqE,SAAW1D,QAAQ0D,UAAY,MLmOjE3C,SAAS,IAAI4C,GAAG,SAAS/G,QAAQU,OAAOJ,SAC3C,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SAAQ0G,mBAAqB/B,SM9T7B,IAAArC,IAAA5C,QAAA,SNkUAM,SMjUQ0G,mBAAAA,kBAER,SAASA,oBAAoB/D,IAAKgC,WAG9BhC,IAAIf,UAAU,QAAU4E,SAAU,KAGlC7D,KAAIf,UAAU,SACV4E,SAAU,EACVvD,MAAO,QAAAA,SACHG,KAAK0C,SAASS,gBAAgBnD,KAAK4C,oBAK3C,WACIrD,IAAIf,UAAU,QACVmB,MAAO,QAAAA,SAAc4D,cAAc1G,KAAKmD,OACxCoB,QAAS,QAAAA,SAAUN,UAAYyC,cAAc1G,KAAKmD,KAAMc,YAG5D,SAASyC,eAAepG,OACpB,GAAIA,QAAUoE,UAAW,CAAEpE,MAAQ6C,KAAK2C,OAAO3C,KAAKmB,QAAU,GAC9D,GAAInB,KAAK0C,SAASc,cAAgBjC,UAAW,CACzCvB,KAAK0C,SAASc,YAAcrG,UACzB,CACH6C,KAAK0C,SAASe,UAAYtG,aAMtC,WACIoC,IAAIf,UAAU,QACVqB,MAAO6D,KACPtC,QAASsC,MAGb,SAASA,MAAMvG,OACX,GAAI+B,GAAA9B,EAAEC,OAAOF,SAAW,YAAaA,MAAQ,EAC7C6C,MAAK0C,SAASiB,UAAYxG,UAKlCoC,KAAIf,UAAU,SACVmB,MAAO,QAAAA,SAAY,GAAAiE,OAAA5D,IACf,IAAI6D,MAAO7D,KACPpB,QAAUoB,KAAK0C,SACfvC,MAAQH,KAAK2C,OACbmB,WAAa,KAEjB9D,MAAK+D,cAAgB,KAGrBxE,KAAIyE,GAAGpF,QAAS,mBAAoB,WAChCkF,WAAa,MAIjBvE,KAAIyE,GAAGpF,QAAS,iBAAkB,WAC9BkF,WAAa,OAIjBvE,KAAIyE,GAAGpF,QAAS,QAAS,WAAA,MAAMgF,OAAKG,cAAgB,MAEpDxE,KAAIyE,GAAGpF,QAAS,OAAQ,WAAA,MAAMgF,OAAKG,cAAgB,OAEnDnF,SAAQqF,iBAAiB,QAASC,WAAY,MAI9C,IAAI3E,IAAI4E,UAAY,OAAQ,CACxB5E,IAAIyE,GAAGpF,QAAS,MAAO,WAAA,MAAMwF,YAAWF,WAAY,IACpD3E,KAAIyE,GAAGpF,QAAS,QAAS,SAACyF,OACtBA,MAAQA,OAASpG,OAAOoG,OACvBA,MAAMC,UAAY,IAAMD,MAAMC,UAAY,IAAMJ,eAIzD,QAASA,cACL,GAAIJ,WAAY,CAAE,OAClB3D,MAAM0D,KAAK1C,OAASvC,QAAQzB,QAKpCiE,QAAS,QAAAA,SAAUN,UACf,GAAId,KAAK+D,cAAe,MACxB/D,MAAK0C,SAASvF,MAAQ2D,UAG1BjB,MAAO,QAAAA,SACHG,KAAK0C,SAASvF,MAAQ6C,KAAK2C,OAAO3C,KAAKmB,WAM/C,WACI,QAASoD,WAAWC,WAChBxE,KAAA,IAASwE,WAAexE,KAAK2C,OAAO3C,KAAKmB,MACzC5B,KAAIyE,GAAGhE,KAAK0C,SAAU8B,UAAWxE,KAAA,IAASwE,YAG9C,QAASC,aAAaD,UAAWE,SAC7BnF,IAAIoF,IAAI3E,KAAK0C,SAAU8B,UAAWxE,KAAA,IAASwE,WAC3CxE,MAAA,IAASwE,WAAeE,OACxBnF,KAAIyE,GAAGhE,KAAK0C,SAAU8B,UAAWxE,KAAA,IAASwE,YAG9CjF,IAAIf,UAAU,cACVqB,MAAO,QAAAA,SAAc0E,UAAU1H,KAAKmD,KAAM,eAC1CoB,QAAS,QAAAA,SAAUsD,SAAWD,YAAY5H,KAAKmD,KAAM,aAAc0E,WAGvEnF,KAAIf,UAAU,cACVqB,MAAO,QAAAA,SAAc0E,UAAU1H,KAAKmD,KAAM,eAC1CoB,QAAS,QAAAA,SAAUsD,SAAWD,YAAY5H,KAAKmD,KAAM,aAAc0E,WAGvEnF,KAAIf,UAAU,aACVqB,MAAO,QAAAA,SAAc0E,UAAU1H,KAAKmD,KAAM,cAC1CoB,QAAS,QAAAA,SAAUsD,SAAWD,YAAY5H,KAAKmD,KAAM,YAAa0E,WAGtEnF,KAAIf,UAAU,YACVqB,MAAO,QAAAA,SAAc0E,UAAU1H,KAAKmD,KAAM,aAC1CoB,QAAS,QAAAA,SAAUsD,SAAWD,YAAY5H,KAAKmD,KAAM,WAAY0E,eAKzEnF,KAAIf,UAAU,SACVmB,MAAO,QAAAA,SAEH,GAAIK,KAAKmB,MAAMhD,QAAQ,MAAQ,EAAG,CAC9B6B,KAAK4E,kBAAoB1F,GAAA9B,EAAEmB,WAAWyB,KAAKmB,MAC3CnB,MAAKmB,MAAQjC,GAAA9B,EAAEqB,aAAauB,KAAKmB,MACjCnB,MAAK6E,SAAW7E,KAAK0C,SAASoC,iBAAiB9E,KAAK4E,qBAG5D/E,MAAO,QAAAA,SACH,GAAMgE,MAAO7D,IAGb,IAAIA,KAAK4E,kBAAmB,CAExB5E,KAAK+E,YAAc,SAAUV,OACzBA,MAAQpG,OAAOoG,OAASA,KACxB,IAAI9G,QAAS8G,MAAM9G,QAAU8G,MAAMW,UAGnC,IAAIC,YAAaC,eAAerI,KAAKgH,KAAMtG,OAE3C,IAAIA,SAAWsG,KAAKnB,UAAYuC,aAAe,MAAO,MACtDpB,MAAKlB,OAAOkB,KAAK1C,OAAO4B,MAAMkC,WAAYjC,gBAK3C,CACHhD,KAAK+E,YAAc,WAAclB,KAAKlB,OAAOkB,KAAK1C,OAAO4B,MAAM/C,KAAMgD,YAGzEzD,IAAIyE,GAAGhE,KAAK0C,SAAU,QAAS1C,KAAK+E,cAGxC3D,QAAS,QAAAA,SAAUN,UACfvB,IAAIoF,IAAI3E,KAAK0C,SAAU,QAAS1C,KAAK+E,YACrC,IAAMlB,MAAO7D,IAGb,IAAIA,KAAK4E,kBAAmB,CAExB5E,KAAK+E,YAAc,SAAUV,OACzBA,MAAQpG,OAAOoG,OAASA,KACxB,IAAI9G,QAAS8G,MAAM9G,QAAU8G,MAAMW,UAGnC,IAAIC,YAAaC,eAAerI,KAAKgH,KAAMtG,OAE3C,IAAIA,SAAWsG,KAAKnB,UAAYuC,aAAe,MAAO,MACtDnE,UAASiC,MAAMkC,WAAYjC,gBAI5B,CACHhD,KAAK+E,YAAc,WAAcjE,SAASiC,MAAM/C,KAAMgD,YAG1DzD,IAAIyE,GAAGhE,KAAK0C,SAAU,QAAS1C,KAAK+E,gBAQhD,QAASG,gBAAgB3H,QACrB,GAAIA,SAAWyC,KAAK0C,SAAU,MAAO,MACrC,IAAIyC,OAAQ,KACZ,KAAK,GAAI5I,GAAI,EAAGO,OAASkD,KAAK6E,SAAS/H,OAAQP,EAAIO,OAAQP,IAAK,CAC5D,GAAIgB,SAAWyC,KAAK6E,SAAStI,GAAI,QACjC4I,OAAQ,IACR,OAAO5H,QAEX,IAAK4H,MAAO,MAAOD,gBAAerI,KAAKmD,KAAMzC,OAAO6H,eN0WrD3E,SAAS,IAAI4E,GAAG,SAAS/I,QAAQU,OAAOJ,SAC3C,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SAAQ0I,QAAU/D,SOpkBlB,IAAAgE,sBAAAjJ,QAAA,sCPwkBAM,SOvkBQ0I,QAAAA,OAGR,SAASA,SAAS/F,KACd,YADmB,IAAAiG,OAAA,QAAAA,OAIVlE,YACL,IAAK/B,IAAIiC,YAAYiE,eAAenE,YAAa,MAAA,YAEjD,WACI,GAAMoE,MAAOpE,UACb,IAAInB,OAAQZ,IAAIiC,YAAYkE,KAU5B,KAAKvF,MAAMwF,UAAW,CAClBxF,MAAMwF,UAAYC,SAASd,iBAAT,kBAA4C3E,MAAMF,MAAlD,KAItB,IAAKE,MAAMY,YAAa,CACpBZ,MAAMY,eAMVZ,MAAMyB,WAAc,WAGhB,GAAIC,iBACJ,IAAI1B,MAAM0B,cAAe,CACrB1B,MAAM0B,cAAcb,QAAQ,SAAC6E,WAAY3E,MAAOQ,cAC5CG,cAAcX,OAAS3B,IAAIiC,YAAYqE,YAActG,IAAIiC,YAAYqE,YAAetG,IAAIuG,SAASD,YAActG,IAAIuG,SAASD,YAAc,OAIlJ1F,MAAMyB,UAAUmB,MAAM5C,OAAQA,OAAO4F,OAAOlE,eAG5C,KAAK,GAAImE,QAAQ7F,OAAO,CACpB,IAAKA,MAAMsF,eAAeO,OACnBA,OAAS,SACTA,OAAS,eACTA,OAAS,aACTA,OAAS,aACTA,OAAS,gBACd,CAAE,SAGJzG,IAAI0G,QAAQ9F,MAAO6F,KAAM,KAAzBT,qBAAA5E,wBA/CL,IAAAuF,QAAA,QAAAA,QAqDM3J,EAAOO,QACRqJ,iBAAmB5G,IAAI6G,cAAcjG,MAAMwF,UAAUpJ,GAGzD,IAAI4J,iBAAkB,CAClBA,iBAAiBnF,QAAQ,SAACxC,UAAW0C,MAAOuB,YACxC,GAAIjE,YAAc,WAAY,MAC9Be,KAAIkD,WAAWjE,YAAc,GAAIe,KAAIkD,WAAWjE,WAAW2B,MAAMwF,UAAUpJ,MAKnF8J,eAAelG,MAAMwF,UAAUpJ,GAAI4D,MAGnCA,OAAMwF,UAAUpJ,GAAG+J,aAAa,UAAWnG,MAAMF,MACjDE,OAAMwF,UAAUpJ,GAAG4G,gBAAgB,gBACnChD,OAAMwF,UAAUpJ,GAAG4G,gBAAgB,YAjBvC,KAAK,GAAI5G,GAAI,EAAGO,OAASqD,MAAMwF,UAAU7I,OAAQP,EAAIO,OAAQP,IAAK,CAAA,GAC1D4J,iBAD0DD,QAAzD3J,EAAOO,aAxDxB,KAAK,GAAIwE,cAAc/B,KAAIiC,YAAa,CAAA,GAAA+E,MAAAf,MAA/BlE,WAA+B,IAAAiF,OAAA,WACa,SA+ErD,QAASF,gBAAgBG,QAASrG,QAE9B,QAAUsG,aAAaC,cAEnB,IAAK,GAAInK,GAAI,EAAGO,OAAS4J,aAAa5J,OAAQP,EAAIO,OAAQP,IAAK,CAC3D,GAAIoK,OAAQD,aAAanK,EACzB,IAAIqK,SAAUD,MAAMC,QAAQhJ,aAG5B,IAAI+I,MAAM7H,WAAW,iBAAkB,CAAE,OAIzC,GAAIS,IAAIC,WAAWoH,SAAU,CACzBxG,QAAQC,IAAIsG,MAAMC,QAAQhJ,cAAgB,OAC1C,IAAIiJ,cAAe,GAAItH,KAAIC,WAAWoH,QAGtCC,cAAalH,OAASkH,aAAalH,MAAMgH,MAAOxG,MAGhDwG,OAAMhD,UAAYkD,aAAa3G,SAG/BmG,gBAAeM,MAAOxG,MAGtB0G,cAAahH,OAASgH,aAAahH,MAAM8G,MAAOxG,WAG7C,CAEH,GAAI2G,eAAgBvH,IAAI6G,cAAcO,MAGtC,KAAK,GAAII,IAAI,EAAGC,QAASF,cAAchK,OAAQiK,GAAIC,QAAQD,KAAK,CAC5D5G,MAAMY,YAAYkG,KAAK,GAAI1H,KAAIkD,WAAWqE,cAAcC,KAAIJ,MAAOxG,OAGnE,IAAIZ,IAAIkD,WAAWqE,cAAcC,KAAI3D,WAAa,IAAO,CACrD,OAIR,GAAIuD,MAAMO,SAASpK,OAAS,EAAG,CAC3B2J,YAAYE,MAAMO,eAQ/BV,QAAQU,cPwlBhBC,sCAAsC,IAAIC,GAAG,SAAS9K,QAAQU,OAAOJ,SACxE,YQvuBA,IAAAsC,IAAA5C,QAAA,QAEA,IAAA+K,OAAA/K,QAAA,sBAEA,IAAAgL,aAAAhL,QAAA,0BACA,IAAAiL,YAAAjL,QAAA,yBACA,IAAAkL,UAAAlL,QAAA,oBACA,IAAAmL,YAAAnL,QAAA,wBAEA,IAAAoL,qBAAApL,QAAA,mCACA,IAAAqL,kBAAArL,QAAA,6BACA,IAAAsL,QAAAtL,QAAA,qBAEA,SAAWuL,KAAMtG,WACb,YAEA,IAAIhC,OAIJA,KAAIuI,QAAU,OACdvI,KAAIwI,OAAS,aACbxI,KAAI4E,QAAUjF,GAAA9B,EAAES,WAKhB,EAAAwJ,MAAAW,eAAczI,MACd,EAAA+H,YAAAhG,YAAW/B,MACX,EAAAgI,WAAA/I,WAAUe,MACV,EAAAiI,SAAAS,SAAQ1I,MACR,EAAAkI,WAAAxI,WAAUM,MAQV,WACIA,IAAI2I,OAAS,KAEb3I,KAAIyE,GAAG/F,OAAQ,mBAAoB,WAC/B,GAAIsB,IAAI2I,OAAQ,MAChBC,oBACA5I,KAAI2I,OAAS,MAGjB3I,KAAIyE,GAAG/F,OAAQ,OAAQ,WACnB,GAAIsB,IAAI2I,OAAQ,MAChBC,oBACA5I,KAAI2I,OAAS,MAGjB9D,YAAW,WACPwB,SAASwC,aAAe,YAAe,WACnC,GAAI7I,IAAI2I,OAAQ,MAChBC,oBACA5I,KAAI2I,OAAS,SAElB,MAOPL,MAAKQ,YAAcR,KAAKtI,IAAMA,GAQ9B,SAAS4I,sBACL,EAAAT,oBAAApE,oBAAmB/D,MACnB,EAAAoI,iBAAAW,kBAAiB/I,MACjB,EAAAqI,OAAAtC,SAAQ/F,QAIbtB,URyuBAsK,QAAQ,EAAEC,wBAAwB,EAAEC,0BAA0B,EAAEC,yBAAyB,EAAEC,mCAAmC,EAAEC,mBAAmB,EAAEC,6BAA6B,EAAEC,oBAAoB,GAAGC,sBAAsB,KAAKC,GAAG,SAAS1M,QAAQU,OAAOJ,SACpQ,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SS7zBgB0L,iBAAAA,gBAAT,SAASA,kBAAkB/I,MAG9B,WACI,IAAKtB,OAAOgL,QAAS,MACrB1J,KAAI0I,QAAQ,KAAM,WACd,MAAO,UAAUiB,WACb,MAAO,IAAID,SAAS,SAAUE,QAASC,QACnCF,WAAaA,UAAUC,QAASC,gBAQhD7J,KAAI0I,QAAQ,QAAS,WACjB,OACIoB,IAAK,QAAAA,KAACC,IAAKC,QAGXC,KAAM,QAAAA,MAACF,IAAKC,QAGZE,MAAO,QAAAA,OAACH,IAAKC,KAAMG,aAAcC,qBTq0BvCC,IAAI,SAAStN,QAAQU,OAAOJ,SAClC,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SUn2BgBqL,QAAAA,OAAT,SAASA,SAAS1I,KAErBA,IAAIuG,WAEJvG,KAAI0I,QAAU,SAAUlJ,KAAM4C,UAC1BpC,IAAIuG,SAAS/G,MAAQ4C,kBV+2BvBkI,IAAI,SAASvN,QAAQU,OAAOJ,SAClC,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SAAQoL,cAAgBzG,SW33BxB,IAAAuI,UAAAxN,QAAA,YACA,IAAAyN,gBAAAzN,QAAA,mBACA,IAAA0N,MAAA1N,QAAA,QACA,IAAA2N,QAAA3N,QAAA,WAEA,IAAA4N,MAAA5N,QAAA,QXq4BAM,SW74BuBoL,cAAdmC,UAUT,SAASA,YAAY5K,MACjB,EAAAuK,SAAA7D,SAAQ1G,MACR,EAAAwK,eAAA3D,eAAc7G,MACd,EAAAyK,KAAAI,KAAI7K,MACJ,EAAA0K,OAAAjG,IAAGzE,MACH,EAAA0K,OAAAtF,KAAIpF,MACJ,EAAA2K,KAAA7J,KAAId,QXy4BL8K,QAAQ,GAAGC,mBAAmB,GAAGC,QAAQ,GAAGC,YAAY,GAAGC,WAAW,KAAKC,IAAI,SAASpO,QAAQU,OAAOJ,SAC1G,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SY95BgBwN,IAAAA,GAAT,SAASA,KAAK7K,KAEjBA,IAAI6K,IAAM,SAAUxL,QAASoH,KAAM7I,OAC/B,GAAIyB,QAAQ+L,MAAM3E,OAASzE,UAAW,MACtC3C,SAAQ+L,MAAM3E,KAAO7I,aZu6BvByN,IAAI,SAAStO,QAAQU,OAAOJ,SAClC,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,Sa76BgBwJ,cAAAA,aAAT,SAASA,eAAe7G,KAE3BA,IAAI6G,cAAgB,SAAUxH,SAC1B,GAAIkI,iBAGJ,KAAK,GAAIvK,GAAI,EAAGO,OAAS8B,QAAQE,WAAWhC,OAAQP,EAAIO,OAAQP,IAAK,CACjE,GAAMsO,eAAgBjM,QAAQE,WAAWvC,GAAGwC,IAC5C,IAAI8L,cAAc1M,QAAQ,OAAS,EAAG,CAAE,SAGxC,GAAIoB,IAAIkD,WAAWoI,eAAqC,CACpD/D,cAAcG,KAAK4D,gBAK3B,IAAK,GAAIC,UAAW,EAAG9D,QAASF,cAAchK,OAAQgO,SAAW9D,QAAQ8D,WAAY,CACjF,IAAK,GAAI/D,IAAI,EAAGA,GAAIC,QAAQD,KAAK,CAC7B,GAAIA,KAAMC,QAAS,EAAG,QACtB,IAAIzH,IAAIkD,WAAWqE,cAAcC,KAAI3D,SAAW7D,IAAIkD,WAAWqE,cAAcC,GAAI,IAAI3D,SAAU,CAC3F,GAAI2H,MAAOjE,cAAcC,GACzBD,eAAcC,IAAKD,cAAcC,GAAI,EACrCD,eAAcC,GAAI,GAAKgE,OAKnC,MAAOjE,sBb67BTkE,IAAI,SAAS1O,QAAQU,OAAOJ,SAClC,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,Sch+BgByD,IAAAA,GAAT,SAASA,KAAKd,KACjBA,IAAIc,KACA4K,QAAS,QAAAA,SAAC5M,KAAD,MAAS+B,SAAQC,IAAR,kBAA8BhC,MAChD6M,QAAS,QAAAA,SAAC7M,KAAD,MAAS+B,SAAQC,IAAR,kBAA8BhC,MAChDmC,MAAO,QAAAA,OAACnC,KAAD,MAAS+B,SAAQC,IAAR,gBAA4BhC,MAC5C8M,KAAM,QAAAA,MAAC9M,KAAD,MAAS+B,SAAQC,IAAR,QAAoBhC,ado/BrC+M,IAAI,SAAS9O,QAAQU,OAAOJ,SAClC,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,Se7/BgBqJ,QAAAA,OAFhB,IAAA/G,IAAA5C,QAAA,SAEO,SAAS2J,SAAS1G,MACrB,SAAEgC,WACEhC,IAAI0G,QAAU,SAAUoF,IAAKrF,KAAMsF,YAAaC,aAC5C,GAAIC,SAAUxF,KACVyF,UAAYJ,IAAIrF,MAChBnF,SAAWwK,IAAIrF,MACflF,SAAW,IAEf,IAAI2K,YAAclK,UAAW,CACzBnB,QAAQI,MAAR,WAAyBwF,KAAzB,IACA,QAGJ,GAAIsF,aAAepM,GAAA9B,EAAEC,OAAOiO,eAAiB,WAAY,CACrDlL,QAAQI,MAAMkL,UAAU,eACxB,QAGJ,GAAIH,aAAerM,GAAA9B,EAAEC,OAAOkO,eAAiB,WAAY,CACrDnL,QAAQI,MAAMkL,UAAU,eACxB,QAGJzO,OAAOC,eAAemO,IAAKG,SACvBnC,IAAK,QAAAA,OACDiC,aAAeA,YAAYzK,SAAUC,SACrC,OAAO2K,YAGXE,IAAK,QAAAA,KAAUC,QACX/K,SAAW4K,SACX3K,UAAW8K,MACXH,WAAY3K,QACZyK,cAAeA,YAAYF,IAAKG,QAAS3K,SAAUC,kBAOvE,QAAS4K,WAAWnL,MAChB,MAAA,kBAAyBA,KAAzB,uBf0gCDE,SAAS,IAAIoL,IAAI,SAASvP,QAAQU,OAAOJ,SAC5C,YAEAK,QAAOC,eAAeN,QAAS,cAC3BO,MAAO,MAEXP,SgB3jCgBoH,GAAAA,EhB4jChBpH,SgBhjCgB+H,IAAAA,GAZT,SAASX,IAAIzE,KAChBA,IAAIyE,GAAK,SAAUpF,QAAS4F,UAAWsH,YAAaC,YAChD,GAAInN,QAAQqF,iBAAkB,CAC1BrF,QAAQqF,iBAAiBO,UAAWsH,YAAaC,YAAc,WAC5D,IAAInN,QAAQoN,YAAa,CAC5BpN,QAAQoN,YAAR,KAAyBxH,UAAasH,iBACnC,CACHlN,QAAA,KAAa4F,WAAesH,cAKjC,QAASnH,KAAKpF,KACjBA,IAAIoF,IAAM,SAAU/F,QAAS4F,UAAWsH,YAAaC,YACjD,GAAInN,QAAQqN,oBAAqB,CAC7BrN,QAAQqN,oBAAoBzH,UAAWsH,YAAaC,YAAc,WAC/D,IAAInN,QAAQsN,YAAa,CAC5BtN,QAAQsN,YAAR,KAAyB1H,UAAasH,iBACnC,CACHlN,QAAA,KAAa4F,WAAe,kBhBykC7B","file":"LancerFrame.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\n// # Carry Your World #\n// ---\n// Internal Functions.\n\nvar _ = exports._ = {\n    typeof: function _typeof(target) {\n        return Object.prototype.toString.call(target).match(/ \\S*/i)[0].replace(\" \", \"\").replace(\"]\", \"\").toLowerCase();\n    },\n    browser: function browser() {\n        var result = \"\";\n        var browser = navigator.appVersion;\n\n        // 判断是否为 IE 系.\n        if (window.ScriptEngine || browser.indexOf(\"Trident\") > -1) {\n            // IE9.\n            if (browser.indexOf(\"MSIE 9.0\") > -1) result = \"IE 9\";\n\n            // IE Morden.\n            if (browser.indexOf(\"MSIE 10.0\") > -1 || browser.indexOf(\"Trident/7.0\") > -1 && browser.indexOf(\"rv:11.0\") > -1) result = \"IE Modern\";\n\n            // Edge.\n            if (browser.indexOf(\"Edge\") > -1) result = \"Edge\";\n        } else if (browser.indexOf(\"Chrome/\") > -1) {\n            result = \"Chrome\";\n        }\n\n        return result;\n    },\n    strip: function strip(str, target) {\n        return str.replace(new RegExp(\"\" + target, \"g\"), \"\");\n    },\n\n    // 检测过滤器方法, 查询指令中的过滤器名称.\n    findFilter: function findFilter(directive) {\n        directive = _.strip(directive, \" \");\n        directive = directive.match(/\\|\\S*/);\n        if (_.typeof(directive) === \"array\" && directive[0]) directive = directive[0].replace(\"|\", \"\");\n        return directive;\n    },\n\n    // 删除过滤器函数.\n    removeFilter: function removeFilter(directive) {\n        return directive.substr(0, directive.indexOf(\"|\") - 1);\n    },\n\n    // 获取节点属性函数.\n    getAttrs: function getAttrs(element) {\n        var result = {};\n        var attrs = element.attributes;\n        for (var i = 0, length = attrs.length; i < length; i++) {\n            result[attrs[i].name] = attrs[i].value;\n        }\n        return result;\n    }\n};\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.component = component;\n\nvar _2 = require(\"../_/_\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /*\r\n                                                                                                                                                           *  LancerFrame Component Function By LancerComet at 21:10, 2016.06.10.\r\n                                                                                                                                                           *  # Carry Your World #\r\n                                                                                                                                                           *  ---\r\n                                                                                                                                                           *  $lc.component.\r\n                                                                                                                                                           */\n\nfunction component($lc) {\n\n    $lc.components = {}; // 存储定义组件.\n\n    $lc.component = function (componentName, options) {\n\n        /*\r\n         *  @ options: {\r\n         *      $init: Function,\r\n         *      $done: Function,\r\n         *      $destroy: Function\r\n         *  }\r\n         */\n\n        if (options.$init && _2._.typeof(options.$init) !== \"function\") {\n            errorHandler(\"$init\");\n            return false;\n        }\n\n        if (options.$done && _2._.typeof(options.$done) !== \"function\") {\n            errorHandler(\"$done\");\n            return false;\n        }\n\n        if (options.$destroy && _2._.typeof(options.$destroy) !== \"function\") {\n            errorHandler(\"$destroy\");\n            return false;\n        }\n\n        $lc.components[componentName] = function () {\n            function _class() {\n                _classCallCheck(this, _class);\n\n                this.$name = componentName;\n                this.$template = options.$template || \"\";\n\n                this.$init = function (element, scope) {\n\n                    // 处理绑定.\n                    // :class 与 :text.\n                    console.log(_2._.getAttrs(element));\n\n                    options.$init && options.$init(element, scope);\n                };\n\n                this.$done = function (element, scope) {\n                    options.$done && options.$done(element, scope);\n                };\n\n                this.$destroy = destoryFunc;\n            }\n\n            return _class;\n        }();\n    };\n\n    function destoryFunc() {\n        console.log(\"Destory Func.\");\n    }\n\n    function errorHandler(type) {\n        $lc.log.error(\"定义组件时定义的 \" + type + \" 必须为 Function 类型.\");\n    }\n}\n\n},{\"../_/_\":1}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.$directivesDataSync = $directivesDataSync;\n/*\r\n *  Controller Data Sync Function by LancerComet at 15:10, 2016/6/4.\r\n *  # Carry Your World #\r\n *  ---\r\n *  控制器内部指令数据同步方法.\r\n *  在控制器初始化时进行 set 定义时被设置为 setCallback.\r\n */\n\nfunction $directivesDataSync(scope, expr, oldValue, newValue) {\n  console.log(scope.$name + \".\" + expr + \" 从 \" + oldValue + \" 修改为 \" + newValue);\n  scope.$directives.forEach(function (directiveObj, index, $directives) {\n    return directiveObj.$expr === expr && directiveObj.$update(newValue);\n  });\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.controller = undefined;\n\nvar _2 = require(\"../_/_\");\n\nexports.controller = controller;\n\n// Definition: 框架控制器定义函数.\n// lc.controller(\"ctrlName\", [\"moduleA\"], function (scope) {})\n// Lancer Frame V0.0.1 By LancerComet at 15:39, 2016.06.02.\n// # Carry Your World #\n\nfunction controller($lc) {\n    \"use strict\";\n\n    $lc.controllers = {};\n    $lc.controller = function (ctrlName, dependencies, initFunc) {\n        // @ params: 模块名称, 依赖模块, 模块初始化函数.\n        if (_2._.typeof(dependencies) !== \"array\") {\n            initFunc = dependencies;\n            dependencies = [];\n        }\n\n        // 定义控制器作用域对象.\n        // 对象将在之后加载用户属性.\n        $lc.controllers[ctrlName] = {\n            $name: ctrlName,\n            $initFunc: initFunc,\n            $dependencies: dependencies // 依赖控制器.\n        };\n    };\n}\n\n},{\"../_/_\":1}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.directive = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\n// # Carry Your World #\n// ---\n// 指令定义方法.\n// 本方法用于定义指令.\n\nvar _2 = require(\"../_/_\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.directive = directive;\n\n\nfunction directive($lc) {\n    $lc.directives = {};\n\n    // 定义指令存储数组.\n    $lc.directive = function (name, options) {\n\n        /*\r\n         * @ name: String,\r\n         * @ options: {\r\n         *       $init: function (element, scope),  // 指令初始化时执行.\r\n         *       $done: Function,  // 指令初始化完毕后执行.\r\n         *       $update: Function,  // 指令节点进行更新时执行.\r\n         *       $destroy: Function  // 指令在销毁时执行.\r\n         *   }\r\n         */\n\n        if (_2._.typeof(name) !== \"string\") {\n            throw new Error(\"自定义指令时必须使用字符串作为指令名称.\");\n        }\n\n        // 将指令登记到 $lc.directives 中.\n        // 登记过的指令是一个 Class, 用于在节点初始化的时候生成指令对象并存储到控制器的 scope.$directives 中.\n        // 这样就可以不依赖 HTML 上的属性了.\n        $lc.directives[\"lc-\" + name] = function () {\n            function _class(element, scope) {\n                _classCallCheck(this, _class);\n\n                this.$element = element;\n                this.$scope = scope;\n                this.$directiveName = \"lc-\" + name;\n                this.$expr = this.$element.attributes[this.$directiveName].value;\n\n                options.$init && options.$init.call(this, this.$element, this.scope);\n\n                // 处理多态.(如果 options 传来指定方法)\n                if (options.$done) {\n                    var _$done = this.$done;\n                    _$done.call(this);\n                    options.$done.call(this); // 执行自定义 $done.\n                } else {\n                        this.$done.call(this);\n                    }\n\n                if (options.$update) {\n                    var _$update = this.$update;\n                    this.$update = function () {\n                        _$update.call(this);\n                        options.$update.apply(this, arguments);\n                    };\n                }\n\n                if (options.$destroy) {\n                    var _$destroy = this.$destroy;\n                    this.$destroy = function () {\n                        _$destroy.call(this);\n                        options.$destroy.apply(this, arguments);\n                    };\n                }\n\n                this.$removeDirective();\n            }\n\n            _createClass(_class, [{\n                key: \"$done\",\n                value: function $done() {}\n            }, {\n                key: \"$update\",\n                value: function $update() {}\n            }, {\n                key: \"$destroy\",\n                value: function $destroy() {}\n                // TODO: 解除节点所有事件并删除节点.\n\n\n                // 删除节点指令标识.\n\n            }, {\n                key: \"$removeDirective\",\n                value: function $removeDirective() {\n                    this.$element.removeAttribute(this.$directiveName);\n                }\n            }]);\n\n            return _class;\n        }();\n\n        // 设置优先级.\n        // 优先级为 10000 的指令仅仅初始化其自身, 无视其他指令.\n        $lc.directives[\"lc-\" + name].priority = options.priority || 1;\n    };\n}\n\n},{\"../_/_\":1}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.internalDirectives = undefined;\n\nvar _2 = require(\"../_/_\");\n\nexports.internalDirectives = internalDirectives; /*\r\n                                                  *  LancerFrame Internal Directives by LancerComet at 10:39, 2016/6/3.\r\n                                                  *  # Carry Your World #\r\n                                                  *  ---\r\n                                                  *  内置指令定义.\r\n                                                  */\n\nfunction internalDirectives($lc, undefined) {\n\n    // lc-skip\n    $lc.directive(\"skip\", { priority: 10000 });\n\n    // lc-cloak\n    $lc.directive(\"cloak\", {\n        priority: 0,\n        $done: function $done() {\n            this.$element.removeAttribute(this.$directiveName);\n        }\n    });\n\n    // lc-text\n    (function () {\n        $lc.directive(\"text\", {\n            $init: function $init() {\n                setInnterText.call(this);\n            },\n            $update: function $update(newValue) {\n                setInnterText.call(this, newValue);\n            }\n        });\n\n        function setInnterText(value) {\n            if (value === undefined) {\n                value = this.$scope[this.$expr] || \"\";\n            }\n            if (this.$element.textContent !== undefined) {\n                this.$element.textContent = value;\n            } else {\n                this.$element.innerText = value;\n            }\n        }\n    })();\n\n    // lc-html\n    (function () {\n        $lc.directive(\"html\", {\n            $done: func,\n            $update: func\n        });\n\n        function func(value) {\n            if (_2._.typeof(value) === \"undefined\") value = \"\";\n            this.$element.innerHTML = value;\n        }\n    })();\n\n    // lc-model\n    $lc.directive(\"model\", {\n        $init: function $init() {\n            var _this = this;\n\n            var self = this,\n                element = this.$element,\n                scope = this.$scope,\n                imeIgnored = false;\n\n            this.duplexIgnored = false; // 当用户处于输入状态时无视双向绑定.\n\n            // 进入输入法输入状态时锁定控制标识.\n            $lc.on(element, \"compositionstart\", function () {\n                imeIgnored = true;\n            });\n\n            // 当输入法状态恢复时释放控制标识.\n            $lc.on(element, \"compositionend\", function () {\n                imeIgnored = false;\n            });\n\n            // 进入激活状态时无视双向绑定.\n            $lc.on(element, \"focus\", function () {\n                return _this.duplexIgnored = true;\n            });\n\n            $lc.on(element, \"blur\", function () {\n                return _this.duplexIgnored = false;\n            });\n\n            element.addEventListener(\"input\", inputEvent, false);\n\n            // Fixing: IE9 在 Backspace / Delete / 剪切时不触发 input 事件.\n            // http://frontenddev.org/article/compatible-with-processing-and-chinese-input-method-to-optimize-the-input-events.html\n            if ($lc.BROWSER === \"IE 9\") {\n                $lc.on(element, \"cut\", function () {\n                    return setTimeout(inputEvent, 1);\n                }); // 必须放置在任务队列中才生效.\n                $lc.on(element, \"keyup\", function (event) {\n                    event = event || window.event;\n                    (event.keyCode === 46 || event.keyCode === 8) && inputEvent();\n                });\n            }\n\n            function inputEvent() {\n                if (imeIgnored) {\n                    return;\n                }\n                scope[self.$expr] = element.value;\n            }\n        },\n\n        $update: function $update(newValue) {\n            if (this.duplexIgnored) return;\n            this.$element.value = newValue;\n        },\n\n        $done: function $done() {\n            this.$element.value = this.$scope[this.$expr];\n        }\n\n    });\n\n    // lc-mouse events.\n    (function () {\n        function initEvent(eventType) {\n            this[\"$\" + eventType] = this.$scope[this.$expr];\n            $lc.on(this.$element, eventType, this[\"$\" + eventType]);\n        }\n\n        function updateEvent(eventType, newFunc) {\n            $lc.off(this.$element, eventType, this[\"$\" + eventType]);\n            this[\"$\" + eventType] = newFunc;\n            $lc.on(this.$element, eventType, this[\"$\" + eventType]);\n        }\n\n        $lc.directive(\"mouseenter\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseenter\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseenter\", newFunc);\n            }\n        });\n\n        $lc.directive(\"mouseleave\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseleave\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseleave\", newFunc);\n            }\n        });\n\n        $lc.directive(\"mouseover\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseover\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseover\", newFunc);\n            }\n        });\n\n        $lc.directive(\"mouseout\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseout\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseout\", newFunc);\n            }\n        });\n    })();\n\n    // lc-click\n    $lc.directive(\"click\", {\n        $init: function $init() {\n            // 处理事件委托属性.\n            if (this.$expr.indexOf(\"|\") > -1) {\n                this.$delegatedElement = _2._.findFilter(this.$expr);\n                this.$expr = _2._.removeFilter(this.$expr);\n                this.$targets = this.$element.querySelectorAll(this.$delegatedElement);\n            }\n        },\n        $done: function $done() {\n            var self = this;\n\n            // 事件委托.\n            if (this.$delegatedElement) {\n\n                this.$clickEvent = function (event) {\n                    event = window.event || event;\n                    var target = event.target || event.srcElement;\n\n                    // 判断 target 是不是想要的元素并返回结果.\n                    var targetThis = targetChecking.call(self, target);\n\n                    if (target === self.$element || targetThis === false) return; // 如果点击到了委托容器 || 循环到了委托容器则退出.\n                    self.$scope[self.$expr].apply(targetThis, arguments);\n                    // console.log(`time takes ${end - start}`);  // 十五层节点嵌套大概需要 0.2 秒.\n                };\n\n                // 无委托.\n            } else {\n                    this.$clickEvent = function () {\n                        self.$scope[self.$expr].apply(this, arguments);\n                    };\n                }\n\n            $lc.on(this.$element, \"click\", this.$clickEvent);\n        },\n\n        $update: function $update(newValue) {\n            $lc.off(this.$element, \"click\", this.$clickEvent);\n            var self = this;\n\n            // 事件委托.\n            if (this.$delegatedElement) {\n\n                this.$clickEvent = function (event) {\n                    event = window.event || event;\n                    var target = event.target || event.srcElement;\n\n                    // 判断 target 是不是想要的元素并返回结果.\n                    var targetThis = targetChecking.call(self, target);\n\n                    if (target === self.$element || targetThis === false) return; // 如果点击到了委托容器则退出.\n                    newValue.apply(targetThis, arguments);\n                };\n\n                // 无委托.\n            } else {\n                    this.$clickEvent = function () {\n                        newValue.apply(this, arguments);\n                    };\n                }\n\n            $lc.on(this.$element, \"click\", this.$clickEvent);\n        }\n    });\n}\n\n// 判断点击事件是否为需要的元素.\nfunction targetChecking(target) {\n    if (target === this.$element) return false; // 如果递归到 lc-click 指令元素本身则退出.\n    var found = false;\n    for (var i = 0, length = this.$targets.length; i < length; i++) {\n        if (target !== this.$targets[i]) continue;\n        found = true;\n        return target;\n    }\n    if (!found) return targetChecking.call(this, target.parentNode);\n}\n\n},{\"../_/_\":1}],7:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.domInit = undefined;\n\nvar _$directivesDataSync = require(\"../controller/$directives-data-sync\");\n\nexports.domInit = domInit;\n\n// 开始初始化页面节点.\n// Lancer Frame V0.0.1 By LancerComet at 15:00, 2016.06.02.\n// # Carry Your World #\n// ---\n// 节点初始化逻辑.\n\nfunction domInit($lc) {\n    \"use strict\";\n\n    // 初始化所有控制器节点.\n\n    var _loop = function _loop(controller) {\n        if (!$lc.controllers.hasOwnProperty(controller)) return \"continue\";\n\n        (function () {\n            var ctrl = controller; // 创建闭包修复嵌套控制器初始化问题.\n            var scope = $lc.controllers[ctrl];\n            /*\r\n            * @ scope: {\r\n            *     $name: 控制器名称,\r\n            *     $directives: 子节点指令对象, 用户数据同步.\r\n            *     ... (其他用户定义属性)\r\n            * } \r\n            */\n\n            // 保存控制器节点.\n            if (!scope.$ctrlDoms) {\n                scope.$ctrlDoms = document.querySelectorAll(\"[lc-controller=\" + scope.$name + \"]\");\n            }\n\n            // 创建控制器下的指令节点对象至数组 $directives 中.\n            if (!scope.$directives) {\n                scope.$directives = [];\n            }\n\n            // 初始化控制器对象.\n            // 设置双向数据绑定.\n            scope.$initFunc && function () {\n\n                // 引入依赖控制器.\n                var $dependencies = []; // 依赖存放数组.\n                if (scope.$dependencies) {\n                    scope.$dependencies.forEach(function (dependency, index, dependencies) {\n                        $dependencies[index] = $lc.controllers[dependency] ? $lc.controllers[dependency] : $lc.services[dependency] ? $lc.services[dependency] : null; // 控制器 > 服务 > null.\n                    });\n                }\n\n                scope.$initFunc.apply(scope, [scope].concat($dependencies)); // 将控制器对象放入 initFunc 中执行. 将加载用户属性.\n\n                // 为每个用户定义的属性设置 get / set.\n                for (var prop in scope) {\n                    if (!scope.hasOwnProperty(prop) || prop === \"$name\" || prop === \"$directives\" || prop === \"$initFunc\" || prop === \"$ctrlDoms\" || prop === \"$dependencies\") {\n                        continue;\n                    }\n\n                    // 监视 scope 中的属性.\n                    $lc.observe(scope, prop, null, _$directivesDataSync.$directivesDataSync);\n                }\n            }();\n\n            // 初始化控制器节点与其子节点, 建立指令对象并推入 $directives.\n\n            var _loop2 = function _loop2(i, length) {\n                directivesOfCtrl = $lc.getDirectives(scope.$ctrlDoms[i]);\n\n                // 处理控制器上的额外指令.\n\n                if (directivesOfCtrl) {\n                    directivesOfCtrl.forEach(function (directive, index, directives) {\n                        if (directive === \"lc-cloak\") return; // lc-cloak 放至最后处理.\n                        $lc.directives[directive] && new $lc.directives[directive](scope.$ctrlDoms[i]);\n                    });\n                }\n\n                // 初始化控制器内部节点.\n                initController(scope.$ctrlDoms[i], scope);\n\n                // 控制器节点处理完之后修改 lc-controller. 就是方便查看是不是初始化完毕了.\n                scope.$ctrlDoms[i].setAttribute(\"lc-ctrl\", scope.$name);\n                scope.$ctrlDoms[i].removeAttribute(\"lc-controller\");\n                scope.$ctrlDoms[i].removeAttribute(\"lc-cloak\");\n            };\n\n            for (var i = 0, length = scope.$ctrlDoms.length; i < length; i++) {\n                var directivesOfCtrl;\n\n                _loop2(i, length);\n            }\n        })();\n    };\n\n    for (var controller in $lc.controllers) {\n        var _ret = _loop(controller);\n\n        if (_ret === \"continue\") continue;\n    }\n\n    // Definition: 初始化控制器内部节点.\n    function initController(ctrlDom, scope) {\n\n        (function initChilden(ctrlChildren) {\n\n            for (var i = 0, length = ctrlChildren.length; i < length; i++) {\n                var child = ctrlChildren[i];\n                var tagName = child.tagName.toLowerCase();\n\n                // 避开嵌套控制器.\n                if (child.attributes[\"lc-controller\"]) {\n                    return;\n                }\n\n                // 判断其是指令还是组件.\n                // 组件.\n                if ($lc.components[tagName]) {\n                    console.log(child.tagName.toLowerCase() + \" 是组件\");\n                    var componentObj = new $lc.components[tagName]();\n\n                    // 执行 $init.\n                    componentObj.$init && componentObj.$init(child, scope);\n\n                    // 设置组件内部 HTML 为模板.\n                    child.innerHTML = componentObj.$template;\n\n                    // 扫描组件内部是否含有指令并初始化.\n                    initController(child, scope);\n\n                    // 执行 $done.\n                    componentObj.$done && componentObj.$done(child, scope);\n\n                    // 指令.\n                } else {\n                        // 获取节点上注册的指令.\n                        var directiveList = $lc.getDirectives(child);\n\n                        // 初始化指令.\n                        for (var _i = 0, _length = directiveList.length; _i < _length; _i++) {\n                            scope.$directives.push(new $lc.directives[directiveList[_i]](child, scope)); // 创建指令对象并推入控制器下的 $directives.\n\n                            // 当出现优先级为 10000 的指令时仅仅初始化自身, 中止执行.\n                            if ($lc.directives[directiveList[_i]].priority === 10000) {\n                                break;\n                            }\n                        }\n\n                        if (child.children.length > 0) {\n                            initChilden(child.children); // 多层嵌套子元素.\n                        }\n                    }\n            }\n\n            // 初始化指令.\n        })(ctrlDom.children);\n    }\n}\n\n},{\"../controller/$directives-data-sync\":3}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _2 = require(\"./_/_\");\n\nvar _main = require(\"./static-func/_main\");\n\nvar _controller = require(\"./controller/controller\");\n\nvar _directive = require(\"./directives/directive\");\n\nvar _service = require(\"./service/service\");\n\nvar _component = require(\"./component/component\");\n\nvar _internalDirectives = require(\"./directives/internal-directives\");\n\nvar _internalService = require(\"./service/internal-service\");\n\nvar _main2 = require(\"./dom-init/_main\");\n\n(function (root, undefined) {\n    \"use strict\";\n\n    var $lc = {};\n\n    // Definition: 常量定义区.\n    // =================================\n    $lc.VERSION = \"0.0.1\";\n    $lc.AUTHOR = \"LancerComet\";\n    $lc.BROWSER = _2._.browser();\n\n    // Definition: 初始化框架模块.\n    // =================================\n    (0, _main.setStaticFunc)($lc); // 初始化静态方法.\n    (0, _controller.controller)($lc); // 初始化控制器逻辑.\n    (0, _directive.directive)($lc); // 初始化指令定义函数.\n    (0, _service.service)($lc); // 初始化服务函数.\n    (0, _component.component)($lc); // 初始化组件函数.\n\n    // Definition: 框架初始化.\n    // =================================\n    // 让框架在 DomContentLoaded 时进行初始化.\n    // 如果没赶上, 则在 window.onload 时进行.\n    // 如果还没赶上, 检测 document.readyState 是否为 complete, 是则直接执行.\n    (function () {\n        $lc.inited = false;\n\n        $lc.on(window, \"DOMContentLoaded\", function () {\n            if ($lc.inited) return;\n            initAfterDomReady();\n            $lc.inited = true;\n        });\n\n        $lc.on(window, \"load\", function () {\n            if ($lc.inited) return;\n            initAfterDomReady();\n            $lc.inited = true;\n        });\n\n        setTimeout(function () {\n            document.readyState === \"complete\" && function () {\n                if ($lc.inited) return;\n                initAfterDomReady();\n                $lc.inited = true;\n            }();\n        }, 1);\n    })();\n\n    // Definition: 将 LancerFrame 挂载至全局环境.\n    // =================================\n    root.LancerFrame = root.$lc = $lc;\n\n    /* Definiton goes below. */\n\n    // Definiiton: 框架初始化函数.\n    // =================================\n    function initAfterDomReady() {\n        (0, _internalDirectives.internalDirectives)($lc); // 初始化内置指令.\n        (0, _internalService.internalSerivces)($lc); // 初始化内置服务.\n        (0, _main2.domInit)($lc); // 扫描文档结构.\n    }\n})(window); // Lancer Frame V0.0.1 By LancerComet at 16:44, 2016.02.29.\n// # Carry Your World #\n\n},{\"./_/_\":1,\"./component/component\":2,\"./controller/controller\":4,\"./directives/directive\":5,\"./directives/internal-directives\":6,\"./dom-init/_main\":7,\"./service/internal-service\":9,\"./service/service\":10,\"./static-func/_main\":11}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.internalSerivces = internalSerivces;\n/*\r\n *  LancerFrame Internal Service by LancerComet at 12:06, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  内置服务定义.\r\n */\n\nfunction internalSerivces($lc) {\n\n    // $q. Promise 封装, 暂不做任何兼容处理.\n    (function () {\n        if (!window.Promise) return;\n        $lc.service(\"$q\", function () {\n            return function (asyncFunc) {\n                return new Promise(function (resolve, reject) {\n                    asyncFunc && asyncFunc(resolve, reject);\n                });\n            };\n        });\n    })();\n\n    // $http.\n    $lc.service(\"$http\", function () {\n        return {\n            get: function get(url, data) {},\n            post: function post(url, data) {},\n            jsonp: function jsonp(url, data, callbackName, callback) {}\n        };\n    });\n}\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.service = service;\n/*\r\n *  LancerFrame Serivce Module By LancerComet at 11:14, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.service 静态方法.\r\n */\n\nfunction service($lc) {\n\n    $lc.services = {};\n\n    $lc.service = function (name, initFunc) {\n        $lc.services[name] = initFunc();\n    };\n}\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setStaticFunc = undefined;\n\nvar _observe = require(\"./observe\");\n\nvar _getDirectives = require(\"./get-directives\");\n\nvar _css = require(\"./css\");\n\nvar _onOff = require(\"./on-off\");\n\nvar _log = require(\"./log\");\n\n// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\n// # Carry Your World #\n\nexports.setStaticFunc = staticFunc;\n\n\nfunction staticFunc($lc) {\n    (0, _observe.observe)($lc); // $lc.observe.\n    (0, _getDirectives.getDirectives)($lc); // $lc.getDirectives.\n    (0, _css.css)($lc); // $lc.css.\n    (0, _onOff.on)($lc); // $lc.on.\n    (0, _onOff.off)($lc); // $lc.off.\n    (0, _log.log)($lc); // $lc.log.\n}\n\n},{\"./css\":12,\"./get-directives\":13,\"./log\":14,\"./observe\":15,\"./on-off\":16}],12:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.css = css;\n// Lancer Frame V0.0.1 By LancerComet at 22:16, 2016.06.02.\n// # Carry Your World #\n// ---\n// CSS 设置方法\nfunction css($lc) {\n\n    $lc.css = function (element, prop, value) {\n        if (element.style.prop === undefined) return;\n        element.style.prop = value;\n    };\n};\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getDirectives = getDirectives;\n/*\r\n *  Get Directives Function By LancerComet at 14:45, 2016/6/6.\r\n *  # Carry Your World #\r\n *  ---\r\n *  获取节点指令.\r\n *  @ Array.\r\n */\n\nfunction getDirectives($lc) {\n\n    $lc.getDirectives = function (element) {\n        var directiveList = [];\n\n        // 获取指令属性.\n        for (var i = 0, length = element.attributes.length; i < length; i++) {\n            var directiveName = element.attributes[i].name; // 指令名称.\n            if (directiveName.indexOf(\"lc-\") < 0) {\n                continue;\n            }\n\n            // 如果 $lc.directives 中有相应指令则初始化指令.\n            if ($lc.directives[directiveName] /* && directiveExpr*/) {\n                    // 暂时取消 expr 的强制判断, 否则必须制定 expr, 有时候指令可能不想或不需要制定 expr, 观察功能是否正常.\n                    directiveList.push(directiveName);\n                }\n        }\n\n        // 为指令优先级进行排序.\n        for (var sortTime = 0, _length = directiveList.length; sortTime < _length; sortTime++) {\n            for (var _i = 0; _i < _length; _i++) {\n                if (_i === _length - 1) continue;\n                if ($lc.directives[directiveList[_i]].priority < $lc.directives[directiveList[_i + 1]].priority) {\n                    var swap = directiveList[_i];\n                    directiveList[_i] = directiveList[_i + 1];\n                    directiveList[_i + 1] = swap;\n                }\n            }\n        }\n\n        return directiveList;\n    };\n}\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.log = log;\n/*\r\n *  Log Function By LancerComet at 23:13, 2016/6/10.\r\n *  # Carry Your World #\r\n *  ---\r\n *  日志函数.\r\n */\n\nfunction log($lc) {\n    $lc.log = {\n        success: function success(str) {\n            return console.log(\"[success] $lc: \" + str);\n        },\n        caution: function caution(str) {\n            return console.log(\"[caution] $lc: \" + str);\n        },\n        error: function error(str) {\n            return console.log(\"[error] $lc: \" + str);\n        },\n        info: function info(str) {\n            return console.log(\"$lc: \" + str);\n        }\n    };\n}\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.observe = observe;\n\nvar _2 = require(\"../_/_\");\n\nfunction observe($lc) {\n    (function (undefined) {\n        // 创建一个纯净的 undefined\n        $lc.observe = function (obj, prop, getCallback, setCallback) {\n            var propKey = prop,\n                propValue = obj[prop],\n                oldValue = obj[prop],\n                newValue = null;\n\n            if (propValue === undefined) {\n                console.error(\"不存在监听属性 \" + prop + \".\");\n                return;\n            }\n\n            if (getCallback && _2._.typeof(getCallback) !== \"function\") {\n                console.error(errorText(\"getCallback\"));\n                return;\n            }\n\n            if (setCallback && _2._.typeof(setCallback) !== \"function\") {\n                console.error(errorText(\"setCallback\"));\n                return;\n            }\n\n            Object.defineProperty(obj, propKey, {\n                get: function get() {\n                    getCallback && getCallback(oldValue, newValue);\n                    return propValue;\n                },\n\n                set: function set(newVal) {\n                    oldValue = propValue;\n                    newValue = newVal;\n                    propValue = newValue; // 用户修改值之后进行更新.\n                    setCallback && setCallback(obj, propKey, oldValue, newValue);\n                }\n            });\n        };\n    })();\n} /*\r\n   *  LancerFrame observe Function By LancerComet at 14:10, 2016.06.04.\r\n   *  # Carry Your World #\r\n   *  ---\r\n   *  $lc.observe 函数, 使用 get / set 进行数据监听.\r\n   */\n\nfunction errorText(type) {\n    return \"$lc.observe 注册 \" + type + \" 时类型必须为 Function.\";\n}\n\n},{\"../_/_\":1}],16:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.on = on;\nexports.off = off;\n/*\r\n *  LancerFrame on Function By LancerComet at 01:22, 2016.06.03.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.on\r\n */\n\nfunction on($lc) {\n    $lc.on = function (element, eventType, eventHanler, useCapture) {\n        if (element.addEventListener) {\n            element.addEventListener(eventType, eventHanler, useCapture || false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + eventType, eventHanler);\n        } else {\n            element[\"on\" + eventType] = eventHanler;\n        }\n    };\n}\n\nfunction off($lc) {\n    $lc.off = function (element, eventType, eventHanler, useCapture) {\n        if (element.removeEventListener) {\n            element.removeEventListener(eventType, eventHanler, useCapture || false);\n        } else if (element.detachEvent) {\n            element.detachEvent(\"on\" + eventType, eventHanler);\n        } else {\n            element[\"on\" + eventType] = null;\n        }\n    };\n}\n\n},{}]},{},[8])\n\n","// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// Internal Functions.\r\n\r\nexport const _ = {\r\n    typeof: (target) => Object.prototype.toString.call(target).match(/ \\S*/i)[0].replace(\" \", \"\").replace(\"]\", \"\").toLowerCase(),\r\n    browser: () => {\r\n        var result = \"\";\r\n        const browser = navigator.appVersion;\r\n\r\n        // 判断是否为 IE 系.\r\n        if (window.ScriptEngine || browser.indexOf(\"Trident\") > -1) {\r\n            // IE9.\r\n            if (browser.indexOf(\"MSIE 9.0\") > -1) result = \"IE 9\";\r\n\r\n            // IE Morden.\r\n            if (browser.indexOf(\"MSIE 10.0\") > -1 || (browser.indexOf(\"Trident/7.0\") > -1 && browser.indexOf(\"rv:11.0\") > -1)) result = \"IE Modern\";\r\n\r\n            // Edge.\r\n            if (browser.indexOf(\"Edge\") > -1) result = \"Edge\";\r\n        } else if (browser.indexOf(\"Chrome/\") > -1) {\r\n            result = \"Chrome\";\r\n        }\r\n\r\n        return result;\r\n    },\r\n    strip: (str, target) => str.replace(new RegExp(`${target}`, \"g\"), \"\"),\r\n\r\n    // 检测过滤器方法, 查询指令中的过滤器名称.\r\n    findFilter: directive => {\r\n        directive = _.strip(directive, \" \");\r\n        directive = directive.match(/\\|\\S*/);\r\n        if (_.typeof(directive) === \"array\" && directive[0]) directive = directive[0].replace(\"|\", \"\");\r\n        return directive;\r\n    },\r\n\r\n    // 删除过滤器函数.\r\n    removeFilter: directive => directive.substr(0, directive.indexOf(\"|\") - 1),\r\n\r\n    // 获取节点属性函数.\r\n    getAttrs: element => {\r\n        var result = {};\r\n        var attrs = element.attributes;\r\n        for (let i = 0, length = attrs.length; i < length; i++) {\r\n            result[attrs[i].name] = attrs[i].value;\r\n        }\r\n        return result;\r\n    }\r\n};","/*\r\n *  LancerFrame Component Function By LancerComet at 21:10, 2016.06.10.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.component.\r\n */\r\n\r\nimport {_} from \"../_/_\"\r\n\r\nexport function component ($lc) {\r\n\r\n    $lc.components = {};  // 存储定义组件.\r\n\r\n    $lc.component = function (componentName, options) {\r\n\r\n        /*\r\n         *  @ options: {\r\n         *      $init: Function,\r\n         *      $done: Function,\r\n         *      $destroy: Function\r\n         *  }\r\n         */\r\n\r\n        if (options.$init && _.typeof(options.$init) !== \"function\") {\r\n            errorHandler(\"$init\");\r\n            return false;\r\n        }\r\n\r\n        if (options.$done && _.typeof(options.$done) !== \"function\") {\r\n            errorHandler(\"$done\");\r\n            return false;\r\n        }\r\n\r\n        if (options.$destroy && _.typeof(options.$destroy) !== \"function\") {\r\n            errorHandler(\"$destroy\");\r\n            return false;\r\n        }\r\n\r\n        $lc.components[componentName] = class {\r\n            constructor () {\r\n                this.$name = componentName;\r\n                this.$template = options.$template || \"\";\r\n\r\n                this.$init = (element, scope) => {\r\n\r\n                    // 处理绑定.\r\n                    // :class 与 :text.\r\n                    console.log(_.getAttrs(element))\r\n\r\n                    options.$init && options.$init(element, scope);\r\n                };\r\n\r\n                this.$done = (element, scope) => {\r\n                    options.$done && options.$done(element, scope);\r\n                };\r\n\r\n                this.$destroy = destoryFunc;\r\n            }\r\n        };\r\n\r\n    };\r\n\r\n    function destoryFunc () {\r\n        console.log(\"Destory Func.\")\r\n    }\r\n    \r\n    function errorHandler (type) {\r\n        $lc.log.error(`定义组件时定义的 ${type} 必须为 Function 类型.`);\r\n    }\r\n}","/*\r\n *  Controller Data Sync Function by LancerComet at 15:10, 2016/6/4.\r\n *  # Carry Your World #\r\n *  ---\r\n *  控制器内部指令数据同步方法.\r\n *  在控制器初始化时进行 set 定义时被设置为 setCallback.\r\n */\r\n\r\nexport function $directivesDataSync (scope, expr, oldValue, newValue) {\r\n    console.log(`${scope.$name}.${expr} 从 ${oldValue} 修改为 ${newValue}`);\r\n    scope.$directives.forEach((directiveObj, index, $directives) => directiveObj.$expr === expr && directiveObj.$update(newValue));\r\n}","// Lancer Frame V0.0.1 By LancerComet at 15:39, 2016.06.02.\r\n// # Carry Your World #\r\n\r\nimport {_} from \"../_/_\"\r\nexport {controller}\r\n\r\n// Definition: 框架控制器定义函数.\r\n// lc.controller(\"ctrlName\", [\"moduleA\"], function (scope) {})\r\nfunction controller ($lc) {\r\n    \"use strict\";\r\n    \r\n    $lc.controllers = {};\r\n    $lc.controller = function (ctrlName, dependencies, initFunc) {\r\n        // @ params: 模块名称, 依赖模块, 模块初始化函数.\r\n        if (_.typeof(dependencies) !== \"array\") {\r\n            initFunc = dependencies;\r\n            dependencies = [];\r\n        }\r\n\r\n        // 定义控制器作用域对象.\r\n        // 对象将在之后加载用户属性.\r\n        $lc.controllers[ctrlName] = {\r\n            $name: ctrlName,\r\n            $initFunc: initFunc,\r\n            $dependencies: dependencies  // 依赖控制器.\r\n        };\r\n\r\n    };\r\n\r\n    \r\n}\r\n\r\n","// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// 指令定义方法.\r\n// 本方法用于定义指令.\r\n\r\nimport {_} from \"../_/_\"\r\n\r\nexport { directive }\r\n\r\nfunction directive ($lc) {\r\n    $lc.directives = {};\r\n\r\n    // 定义指令存储数组.\r\n    $lc.directive = function (name, options) {\r\n\r\n        /*\r\n         * @ name: String,\r\n         * @ options: {\r\n         *       $init: function (element, scope),  // 指令初始化时执行.\r\n         *       $done: Function,  // 指令初始化完毕后执行.\r\n         *       $update: Function,  // 指令节点进行更新时执行.\r\n         *       $destroy: Function  // 指令在销毁时执行.\r\n         *   }\r\n         */\r\n\r\n        if (_.typeof(name) !== \"string\") {\r\n            throw new Error(`自定义指令时必须使用字符串作为指令名称.`);\r\n        }\r\n\r\n\r\n        // 将指令登记到 $lc.directives 中.\r\n        // 登记过的指令是一个 Class, 用于在节点初始化的时候生成指令对象并存储到控制器的 scope.$directives 中.\r\n        // 这样就可以不依赖 HTML 上的属性了.\r\n        $lc.directives[\"lc-\" + name] = class {\r\n            constructor (element, scope) {\r\n                this.$element = element;\r\n                this.$scope = scope;\r\n                this.$directiveName = `lc-${name}`;\r\n                this.$expr = this.$element.attributes[this.$directiveName].value;\r\n\r\n                options.$init && options.$init.call(this, this.$element, this.scope);\r\n\r\n                // 处理多态.(如果 options 传来指定方法)\r\n                if (options.$done) {\r\n                    var _$done = this.$done;\r\n                    _$done.call(this);\r\n                    options.$done.call(this);  // 执行自定义 $done.\r\n                } else {\r\n                    this.$done.call(this);\r\n                }\r\n\r\n                if (options.$update) {\r\n                    var _$update = this.$update;\r\n                    this.$update = function () {\r\n                        _$update.call(this);\r\n                        options.$update.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                if (options.$destroy) {\r\n                    var _$destroy = this.$destroy;\r\n                    this.$destroy = function () {\r\n                        _$destroy.call(this);\r\n                        options.$destroy.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                this.$removeDirective();\r\n            }\r\n\r\n            $done () {\r\n\r\n            }\r\n\r\n            $update () {\r\n            }\r\n\r\n            $destroy () {\r\n                // TODO: 解除节点所有事件并删除节点.\r\n            }\r\n\r\n            // 删除节点指令标识.\r\n            $removeDirective () {\r\n                this.$element.removeAttribute(this.$directiveName);\r\n            }\r\n\r\n        };\r\n\r\n        // 设置优先级.\r\n        // 优先级为 10000 的指令仅仅初始化其自身, 无视其他指令.\r\n        $lc.directives[\"lc-\" + name].priority = options.priority || 1;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n *  LancerFrame Internal Directives by LancerComet at 10:39, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  内置指令定义.\r\n */\r\nimport {_} from \"../_/_\"\r\nexport {internalDirectives}\r\n\r\nfunction internalDirectives ($lc, undefined) {\r\n\r\n    // lc-skip\r\n    $lc.directive(\"skip\", { priority: 10000 });\r\n\r\n    // lc-cloak\r\n    $lc.directive(\"cloak\", {\r\n        priority: 0,\r\n        $done: function () {\r\n            this.$element.removeAttribute(this.$directiveName);\r\n        }\r\n    });\r\n\r\n    // lc-text\r\n    (() => {\r\n        $lc.directive(\"text\", {\r\n            $init: function () { setInnterText.call(this); },\r\n            $update: function (newValue) { setInnterText.call(this, newValue); }\r\n        });\r\n\r\n        function setInnterText (value) {\r\n            if (value === undefined) { value = this.$scope[this.$expr] || \"\"; }\r\n            if (this.$element.textContent !== undefined) {\r\n                this.$element.textContent = value;\r\n            } else {\r\n                this.$element.innerText = value;\r\n            }\r\n        }\r\n    })();\r\n\r\n    // lc-html\r\n    (() => {\r\n        $lc.directive(\"html\", {\r\n            $done: func,\r\n            $update: func\r\n        });\r\n\r\n        function func (value) {\r\n            if (_.typeof(value) === \"undefined\") value = \"\";\r\n            this.$element.innerHTML = value;\r\n        }\r\n    })();\r\n\r\n    // lc-model\r\n    $lc.directive(\"model\", {\r\n        $init: function () {\r\n            var self = this,\r\n                element = this.$element,\r\n                scope = this.$scope,\r\n                imeIgnored = false;\r\n\r\n            this.duplexIgnored = false;  // 当用户处于输入状态时无视双向绑定.\r\n\r\n            // 进入输入法输入状态时锁定控制标识.\r\n            $lc.on(element, \"compositionstart\", function () {\r\n                imeIgnored = true;\r\n            });\r\n\r\n            // 当输入法状态恢复时释放控制标识.\r\n            $lc.on(element, \"compositionend\", function () {\r\n                imeIgnored = false;\r\n            });\r\n\r\n            // 进入激活状态时无视双向绑定.\r\n            $lc.on(element, \"focus\", () => this.duplexIgnored = true);\r\n\r\n            $lc.on(element, \"blur\", () => this.duplexIgnored = false);\r\n\r\n            element.addEventListener(\"input\", inputEvent, false);\r\n\r\n            // Fixing: IE9 在 Backspace / Delete / 剪切时不触发 input 事件.\r\n            // http://frontenddev.org/article/compatible-with-processing-and-chinese-input-method-to-optimize-the-input-events.html\r\n            if ($lc.BROWSER === \"IE 9\") {\r\n                $lc.on(element, \"cut\", () => setTimeout(inputEvent, 1));  // 必须放置在任务队列中才生效.\r\n                $lc.on(element, \"keyup\", (event) => {\r\n                    event = event || window.event;\r\n                    (event.keyCode === 46 || event.keyCode === 8) && inputEvent();\r\n                });\r\n            }\r\n\r\n            function inputEvent () {\r\n                if (imeIgnored) { return; }\r\n                scope[self.$expr] = element.value;\r\n            }\r\n\r\n        },\r\n\r\n        $update: function (newValue) {\r\n            if (this.duplexIgnored) return;\r\n            this.$element.value = newValue;\r\n        },\r\n\r\n        $done: function () {\r\n            this.$element.value = this.$scope[this.$expr];\r\n        }\r\n\r\n    });\r\n\r\n    // lc-mouse events.\r\n    (() => {\r\n        function initEvent (eventType) {\r\n            this[`$${eventType}`] = this.$scope[this.$expr];\r\n            $lc.on(this.$element, eventType, this[`$${eventType}`]);\r\n        }\r\n\r\n        function updateEvent (eventType, newFunc) {\r\n            $lc.off(this.$element, eventType, this[`$${eventType}`]);\r\n            this[`$${eventType}`] = newFunc;\r\n            $lc.on(this.$element, eventType, this[`$${eventType}`]);\r\n        }\r\n\r\n        $lc.directive(\"mouseenter\", {\r\n            $done: function () { initEvent.call(this, \"mouseenter\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseenter\", newFunc); }\r\n        });\r\n\r\n        $lc.directive(\"mouseleave\", {\r\n            $done: function () { initEvent.call(this, \"mouseleave\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseleave\", newFunc); }\r\n        });\r\n\r\n        $lc.directive(\"mouseover\", {\r\n            $done: function () { initEvent.call(this, \"mouseover\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseover\", newFunc); }\r\n        });\r\n\r\n        $lc.directive(\"mouseout\", {\r\n            $done: function () { initEvent.call(this, \"mouseout\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseout\", newFunc); }\r\n        });\r\n    })();\r\n\r\n    // lc-click\r\n    $lc.directive(\"click\", {\r\n        $init: function () {\r\n            // 处理事件委托属性.\r\n            if (this.$expr.indexOf(\"|\") > -1) {\r\n                this.$delegatedElement = _.findFilter(this.$expr);\r\n                this.$expr = _.removeFilter(this.$expr);\r\n                this.$targets = this.$element.querySelectorAll(this.$delegatedElement);\r\n            }\r\n        },\r\n        $done: function () {\r\n            const self = this;\r\n\r\n            // 事件委托.\r\n            if (this.$delegatedElement) {\r\n\r\n                this.$clickEvent = function (event) {\r\n                    event = window.event || event;\r\n                    var target = event.target || event.srcElement;\r\n\r\n                    // 判断 target 是不是想要的元素并返回结果.\r\n                    var targetThis = targetChecking.call(self, target);\r\n\r\n                    if (target === self.$element || targetThis === false) return;  // 如果点击到了委托容器 || 循环到了委托容器则退出.\r\n                    self.$scope[self.$expr].apply(targetThis, arguments);\r\n                    // console.log(`time takes ${end - start}`);  // 十五层节点嵌套大概需要 0.2 秒.\r\n                };\r\n\r\n            // 无委托.\r\n            } else {\r\n                this.$clickEvent = function () { self.$scope[self.$expr].apply(this, arguments); };\r\n            }\r\n\r\n            $lc.on(this.$element, \"click\", this.$clickEvent);\r\n        },\r\n\r\n        $update: function (newValue) {\r\n            $lc.off(this.$element, \"click\", this.$clickEvent);\r\n            const self = this;\r\n\r\n            // 事件委托.\r\n            if (this.$delegatedElement) {\r\n\r\n                this.$clickEvent = function (event) {\r\n                    event = window.event || event;\r\n                    var target = event.target || event.srcElement;\r\n\r\n                    // 判断 target 是不是想要的元素并返回结果.\r\n                    var targetThis = targetChecking.call(self, target);\r\n\r\n                    if (target === self.$element || targetThis === false) return;  // 如果点击到了委托容器则退出.\r\n                    newValue.apply(targetThis, arguments);\r\n                };\r\n\r\n            // 无委托.\r\n            } else {\r\n                this.$clickEvent = function () { newValue.apply(this, arguments); };\r\n            }\r\n\r\n            $lc.on(this.$element, \"click\", this.$clickEvent);\r\n        }\r\n    });\r\n\r\n\r\n}\r\n\r\n// 判断点击事件是否为需要的元素.\r\nfunction targetChecking (target) {\r\n    if (target === this.$element) return false;  // 如果递归到 lc-click 指令元素本身则退出.\r\n    var found = false;\r\n    for (let i = 0, length = this.$targets.length; i < length; i++) {\r\n        if (target !== this.$targets[i]) continue;\r\n        found = true;\r\n        return target;\r\n    }\r\n    if (!found) return targetChecking.call(this, target.parentNode);\r\n}\r\n","// Lancer Frame V0.0.1 By LancerComet at 15:00, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// 节点初始化逻辑.\r\nimport {$directivesDataSync} from \"../controller/$directives-data-sync\"\r\nexport {domInit}\r\n \r\n// 开始初始化页面节点.\r\nfunction domInit ($lc) {\r\n    \"use strict\";\r\n    \r\n    // 初始化所有控制器节点.\r\n    for (let controller in $lc.controllers) {\r\n        if (!$lc.controllers.hasOwnProperty(controller)) continue;\r\n\r\n        (() => {\r\n            const ctrl = controller;  // 创建闭包修复嵌套控制器初始化问题.\r\n            var scope = $lc.controllers[ctrl];\r\n            /*\r\n            * @ scope: {\r\n            *     $name: 控制器名称,\r\n            *     $directives: 子节点指令对象, 用户数据同步.\r\n            *     ... (其他用户定义属性)\r\n            * } \r\n            */\r\n            \r\n            // 保存控制器节点.\r\n            if (!scope.$ctrlDoms) {\r\n                scope.$ctrlDoms = document.querySelectorAll(`[lc-controller=${scope.$name}]`);\r\n            }\r\n            \r\n            // 创建控制器下的指令节点对象至数组 $directives 中.\r\n            if (!scope.$directives) {\r\n                scope.$directives = [];            \r\n            }\r\n            \r\n\r\n            // 初始化控制器对象.\r\n            // 设置双向数据绑定.\r\n            scope.$initFunc && (() => {\r\n\r\n                // 引入依赖控制器.\r\n                var $dependencies = [];  // 依赖存放数组.\r\n                if (scope.$dependencies) {\r\n                    scope.$dependencies.forEach((dependency, index, dependencies) => {\r\n                        $dependencies[index] = $lc.controllers[dependency] ?　$lc.controllers[dependency] : ($lc.services[dependency] ? $lc.services[dependency] : null);  // 控制器 > 服务 > null.\r\n                    });\r\n                }\r\n\r\n                scope.$initFunc.apply(scope, [scope].concat($dependencies));  // 将控制器对象放入 initFunc 中执行. 将加载用户属性.\r\n                \r\n                // 为每个用户定义的属性设置 get / set.\r\n                for (let prop in scope) {\r\n                    if (!scope.hasOwnProperty(prop) \r\n                        || prop === \"$name\" \r\n                        || prop === \"$directives\" \r\n                        || prop === \"$initFunc\"\r\n                        || prop === \"$ctrlDoms\"\r\n                        || prop === \"$dependencies\"\r\n                    ) { continue; }\r\n                    \r\n                    // 监视 scope 中的属性.\r\n                    $lc.observe(scope, prop, null, $directivesDataSync);\r\n                }\r\n        \r\n            })();\r\n            \r\n            // 初始化控制器节点与其子节点, 建立指令对象并推入 $directives.\r\n            for (let i = 0, length = scope.$ctrlDoms.length; i < length; i++) {\r\n                var directivesOfCtrl = $lc.getDirectives(scope.$ctrlDoms[i]);\r\n\r\n                // 处理控制器上的额外指令.\r\n                if (directivesOfCtrl) {\r\n                    directivesOfCtrl.forEach((directive, index, directives) => {\r\n                        if (directive === \"lc-cloak\") return;  // lc-cloak 放至最后处理.\r\n                        $lc.directives[directive] && new $lc.directives[directive](scope.$ctrlDoms[i])\r\n                    });\r\n                }\r\n\r\n                // 初始化控制器内部节点.\r\n                initController(scope.$ctrlDoms[i], scope);\r\n\r\n                // 控制器节点处理完之后修改 lc-controller. 就是方便查看是不是初始化完毕了.\r\n                scope.$ctrlDoms[i].setAttribute(\"lc-ctrl\", scope.$name);\r\n                scope.$ctrlDoms[i].removeAttribute(\"lc-controller\");\r\n                scope.$ctrlDoms[i].removeAttribute(\"lc-cloak\");\r\n            }\r\n\r\n        })();\r\n    }\r\n    \r\n    // Definition: 初始化控制器内部节点.\r\n    function initController (ctrlDom, scope) {\r\n\r\n        (function initChilden (ctrlChildren) {\r\n\r\n            for (let i = 0, length = ctrlChildren.length; i < length; i++) {\r\n                var child = ctrlChildren[i];\r\n                var tagName = child.tagName.toLowerCase();\r\n\r\n                // 避开嵌套控制器.\r\n                if (child.attributes[\"lc-controller\"]) { return; }\r\n\r\n                // 判断其是指令还是组件.\r\n                // 组件.\r\n                if ($lc.components[tagName]) {\r\n                    console.log(child.tagName.toLowerCase() + \" 是组件\");\r\n                    var componentObj = new $lc.components[tagName];\r\n\r\n                    // 执行 $init.\r\n                    componentObj.$init && componentObj.$init(child, scope);\r\n\r\n                    // 设置组件内部 HTML 为模板.\r\n                    child.innerHTML = componentObj.$template;\r\n\r\n                    // 扫描组件内部是否含有指令并初始化.\r\n                    initController(child, scope);\r\n\r\n                    // 执行 $done.\r\n                    componentObj.$done && componentObj.$done(child, scope);\r\n\r\n                    // 指令.\r\n                } else {\r\n                    // 获取节点上注册的指令.\r\n                    var directiveList = $lc.getDirectives(child);\r\n\r\n                    // 初始化指令.\r\n                    for (let i = 0, length = directiveList.length; i < length; i++) {\r\n                        scope.$directives.push(new $lc.directives[directiveList[i]](child, scope));  // 创建指令对象并推入控制器下的 $directives.\r\n\r\n                        // 当出现优先级为 10000 的指令时仅仅初始化自身, 中止执行.\r\n                        if ($lc.directives[directiveList[i]].priority === 10000) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (child.children.length > 0) {\r\n                        initChilden(child.children);  // 多层嵌套子元素.\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            // 初始化指令.\r\n            \r\n        })(ctrlDom.children);\r\n        \r\n    }\r\n\r\n\r\n}","// Lancer Frame V0.0.1 By LancerComet at 16:44, 2016.02.29.\r\n// # Carry Your World #\r\n\r\nimport {_} from \"./_/_\"\r\n\r\nimport {setStaticFunc} from \"./static-func/_main\"\r\n\r\nimport {controller} from \"./controller/controller\"\r\nimport {directive} from \"./directives/directive\"\r\nimport {service} from \"./service/service\"\r\nimport {component} from \"./component/component\"\r\n\r\nimport {internalDirectives} from \"./directives/internal-directives\"\r\nimport {internalSerivces} from \"./service/internal-service\"\r\nimport {domInit} from \"./dom-init/_main\"\r\n\r\n(function (root, undefined) {\r\n    \"use strict\";\r\n    \r\n    var $lc = {};\r\n    \r\n    // Definition: 常量定义区.\r\n    // =================================\r\n    $lc.VERSION = \"0.0.1\";\r\n    $lc.AUTHOR = \"LancerComet\";\r\n    $lc.BROWSER = _.browser();\r\n\r\n\r\n    // Definition: 初始化框架模块.\r\n    // =================================\r\n    setStaticFunc($lc);  // 初始化静态方法.\r\n    controller($lc);  // 初始化控制器逻辑.\r\n    directive($lc);  // 初始化指令定义函数.\r\n    service($lc);  // 初始化服务函数.\r\n    component($lc);  // 初始化组件函数.\r\n\r\n\r\n    // Definition: 框架初始化.\r\n    // =================================\r\n    // 让框架在 DomContentLoaded 时进行初始化.\r\n    // 如果没赶上, 则在 window.onload 时进行.\r\n    // 如果还没赶上, 检测 document.readyState 是否为 complete, 是则直接执行.\r\n    (() => {\r\n        $lc.inited = false;\r\n        \r\n        $lc.on(window, \"DOMContentLoaded\", () => {\r\n            if ($lc.inited) return;\r\n            initAfterDomReady();\r\n            $lc.inited = true;\r\n        });\r\n        \r\n        $lc.on(window, \"load\", () => {\r\n            if ($lc.inited) return;\r\n            initAfterDomReady();\r\n            $lc.inited = true;\r\n        });\r\n        \r\n        setTimeout(() => {\r\n            document.readyState === \"complete\" && (() => {\r\n                if ($lc.inited) return;\r\n                initAfterDomReady();\r\n                $lc.inited = true;\r\n            })();\r\n        }, 1);\r\n        \r\n    })();\r\n\r\n\r\n    // Definition: 将 LancerFrame 挂载至全局环境.\r\n    // =================================\r\n    root.LancerFrame = root.$lc = $lc;\r\n\r\n\r\n    /* Definiton goes below. */\r\n\r\n\r\n    // Definiiton: 框架初始化函数.\r\n    // =================================\r\n    function initAfterDomReady () {\r\n        internalDirectives($lc);  // 初始化内置指令.\r\n        internalSerivces($lc);  // 初始化内置服务.\r\n        domInit($lc);  // 扫描文档结构.\r\n    }\r\n\r\n\r\n})(window);","/*\r\n *  LancerFrame Internal Service by LancerComet at 12:06, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  内置服务定义.\r\n */\r\n\r\nexport function internalSerivces ($lc) {\r\n\r\n    // $q. Promise 封装, 暂不做任何兼容处理.\r\n    (() => {\r\n        if (!window.Promise) return;\r\n        $lc.service(\"$q\", function () {\r\n            return function (asyncFunc) {\r\n                return new Promise (function (resolve, reject) {\r\n                    asyncFunc && asyncFunc(resolve, reject);\r\n                });\r\n            }\r\n        });\r\n    })();\r\n\r\n\r\n    // $http.\r\n    $lc.service(\"$http\", function () {\r\n        return {\r\n            get: (url, data) => {\r\n\r\n            },\r\n            post: (url, data) => {\r\n\r\n            },\r\n            jsonp: (url, data, callbackName, callback) => {\r\n\r\n            }\r\n        }\r\n    });\r\n}","/*\r\n *  LancerFrame Serivce Module By LancerComet at 11:14, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.service 静态方法.\r\n */\r\n\r\nexport function service ($lc) {\r\n\r\n    $lc.services = {};\r\n\r\n    $lc.service = function (name, initFunc) {\r\n        $lc.services[name] = initFunc();\r\n    };\r\n\r\n}\r\n\r\n\r\n","// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\r\n// # Carry Your World #\r\n\r\nexport { staticFunc as setStaticFunc }\r\n\r\n\r\nimport {observe} from \"./observe\"\r\nimport {getDirectives} from \"./get-directives\"\r\nimport {css} from \"./css\"\r\nimport {on} from \"./on-off\"\r\nimport {off} from \"./on-off\"\r\nimport {log} from \"./log\"\r\n\r\nfunction staticFunc ($lc) {\r\n    observe($lc);  // $lc.observe.\r\n    getDirectives($lc); // $lc.getDirectives.\r\n    css($lc);  // $lc.css.\r\n    on($lc); // $lc.on.\r\n    off($lc);  // $lc.off.\r\n    log($lc);  // $lc.log.\r\n}","// Lancer Frame V0.0.1 By LancerComet at 22:16, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// CSS 设置方法\r\nexport function css ($lc) {\r\n    \r\n    $lc.css = function (element, prop, value) {\r\n        if (element.style.prop === undefined) return;\r\n        element.style.prop = value;\r\n    }   \r\n    \r\n};","/*\r\n *  Get Directives Function By LancerComet at 14:45, 2016/6/6.\r\n *  # Carry Your World #\r\n *  ---\r\n *  获取节点指令.\r\n *  @ Array.\r\n */\r\n\r\nexport function getDirectives ($lc) {\r\n\r\n    $lc.getDirectives = function (element) {\r\n        var directiveList = [];\r\n\r\n        // 获取指令属性.\r\n        for (let i = 0, length = element.attributes.length; i < length; i++) {\r\n            const directiveName = element.attributes[i].name;  // 指令名称.\r\n            if (directiveName.indexOf(\"lc-\") < 0) { continue; }\r\n\r\n            // 如果 $lc.directives 中有相应指令则初始化指令.\r\n            if ($lc.directives[directiveName]/* && directiveExpr*/) {  // 暂时取消 expr 的强制判断, 否则必须制定 expr, 有时候指令可能不想或不需要制定 expr, 观察功能是否正常.\r\n                directiveList.push(directiveName);\r\n            }\r\n        }\r\n\r\n        // 为指令优先级进行排序.\r\n        for (let sortTime = 0, length = directiveList.length; sortTime < length; sortTime++) {\r\n            for (let i = 0; i < length; i++) {\r\n                if (i === length - 1) continue;\r\n                if ($lc.directives[directiveList[i]].priority < $lc.directives[directiveList[i + 1]].priority) {\r\n                    var swap = directiveList[i];\r\n                    directiveList[i] = directiveList[i + 1];\r\n                    directiveList[i + 1] = swap;\r\n                }\r\n            }\r\n        }\r\n\r\n        return directiveList;\r\n    };\r\n\r\n}","/*\r\n *  Log Function By LancerComet at 23:13, 2016/6/10.\r\n *  # Carry Your World #\r\n *  ---\r\n *  日志函数.\r\n */\r\n\r\nexport function log ($lc) {\r\n    $lc.log = {\r\n        success: (str) => console.log(`[success] $lc: ${str}`),\r\n        caution: (str) => console.log(`[caution] $lc: ${str}`),\r\n        error: (str) => console.log(`[error] $lc: ${str}`),\r\n        info: (str) => console.log(`$lc: ${str}`)\r\n    };\r\n}","/*\r\n *  LancerFrame observe Function By LancerComet at 14:10, 2016.06.04.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.observe 函数, 使用 get / set 进行数据监听.\r\n */\r\n\r\nimport {_} from \"../_/_\"\r\n\r\nexport function observe ($lc) {\r\n    ((undefined) => {  // 创建一个纯净的 undefined\r\n        $lc.observe = function (obj, prop, getCallback, setCallback) {\r\n            var propKey = prop,\r\n                propValue = obj[prop],\r\n                oldValue = obj[prop],\r\n                newValue = null;\r\n\r\n            if (propValue === undefined) {\r\n                console.error(`不存在监听属性 ${prop}.`);\r\n                return;\r\n            }\r\n\r\n            if (getCallback && _.typeof(getCallback) !== \"function\") {\r\n                console.error(errorText(\"getCallback\"));\r\n                return;\r\n            }\r\n\r\n            if (setCallback && _.typeof(setCallback) !== \"function\") {\r\n                console.error(errorText(\"setCallback\"));\r\n                return;\r\n            }\r\n\r\n            Object.defineProperty(obj, propKey, {\r\n                get: function () {\r\n                    getCallback && getCallback(oldValue, newValue);\r\n                    return propValue;\r\n                },\r\n\r\n                set: function (newVal) {\r\n                    oldValue = propValue;\r\n                    newValue = newVal;\r\n                    propValue = newValue;  // 用户修改值之后进行更新.\r\n                    setCallback && setCallback(obj, propKey, oldValue, newValue);\r\n                }\r\n            });\r\n        };\r\n    })();\r\n}\r\n\r\nfunction errorText (type) {\r\n    return `$lc.observe 注册 ${type} 时类型必须为 Function.`;\r\n}","/*\r\n *  LancerFrame on Function By LancerComet at 01:22, 2016.06.03.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.on\r\n */\r\n\r\nexport function on ($lc) {\r\n    $lc.on = function (element, eventType, eventHanler, useCapture) {\r\n        if (element.addEventListener) {\r\n            element.addEventListener(eventType, eventHanler, useCapture || false);\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent(`on${eventType}`, eventHanler);\r\n        } else {\r\n            element[`on${eventType}`] = eventHanler;\r\n        }\r\n    };\r\n}\r\n\r\nexport function off ($lc) {\r\n    $lc.off = function (element, eventType, eventHanler, useCapture) {\r\n        if (element.removeEventListener) {\r\n            element.removeEventListener(eventType, eventHanler, useCapture || false);\r\n        } else if (element.detachEvent) {\r\n            element.detachEvent(`on${eventType}`, eventHanler);\r\n        } else {\r\n            element[`on${eventType}`] = null;\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}