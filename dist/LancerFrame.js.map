{"version":3,"sources":["node_modules/browser-pack/_prelude.js","LancerFrame.js","src/_/_.js","src/controller/$directives-data-sync.js","src/controller/controller.js","src/directives/directive.js","src/directives/internal-directives.js","src/dom-init/_main.js","src/main.js","src/service/internal-service.js","src/service/service.js","src/static-func/_main.js","src/static-func/css.js","src/static-func/get-directives.js","src/static-func/observe.js","src/static-func/on-off.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Object","defineProperty","value","_","typeof","_typeof","target","prototype","toString","match","replace","toLowerCase","browser","result","navigator","appVersion","window","ScriptEngine","indexOf","strip","str","RegExp","findFilter","directive","removeFilter","substr",2,"$directivesDataSync","scope","expr","oldValue","newValue","console","log","$name","$directives","forEach","directiveObj","index","$expr","$update",3,"controller","undefined","_2","$lc","controllers","ctrlName","dependencies","initFunc","$initFunc","$dependencies","../_/_",4,"_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","directives","name","options","_class","element","this","$element","$scope","$directiveName","attributes","$init","$done","_$done","_$update","apply","arguments","$destory","_$destory","$removeDirective","removeAttribute","priority",5,"internalDirectives","setInnterText","textContent","innerText","func","innerHTML","_this","self","imeIgnored","duplexIgnored","on","addEventListener","inputEvent","BROWSER","setTimeout","event","keyCode","initEvent","eventType","updateEvent","newFunc","off","$delegatedElement","$targets","querySelectorAll","$clickEvent","srcElement","targetThis","targetChecking","found","parentNode",6,"domInit","_$directivesDataSync","_loop","hasOwnProperty","ctrl","$ctrlDoms","document","dependency","services","concat","prop","observe","_loop2","directivesOfCtrl","getDirectives","initController","setAttribute","_ret","ctrlDom","initChilden","ctrlChildren","child","directiveList","_i","_length","push","children","../controller/$directives-data-sync",7,"_main","_controller","_directive","_service","_internalDirectives","_internalService","_main2","root","VERSION","AUTHOR","setStaticFunc","service","inited","initAfterDomReady","readyState","LancerFrame","internalSerivces","./_/_","./controller/controller","./directives/directive","./directives/internal-directives","./dom-init/_main","./service/internal-service","./service/service","./static-func/_main",8,"Promise","asyncFunc","resolve","reject","get","url","data","post","jsonp","callbackName","callback",9,10,"_observe","_getDirectives","_css","_onOff","staticFunc","css","./css","./get-directives","./observe","./on-off",11,"style",12,"directiveName","sortTime","swap",13,"obj","getCallback","setCallback","propKey","propValue","error","errorText","set","newVal","type",14,"eventHanler","useCapture","attachEvent","removeEventListener","detachEvent"],"mappings":"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","file":"LancerFrame.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\n// # Carry Your World #\n// ---\n// Internal Functions.\n\nvar _ = exports._ = {\n    typeof: function _typeof(target) {\n        return Object.prototype.toString.call(target).match(/ \\S*/i)[0].replace(\" \", \"\").replace(\"]\", \"\").toLowerCase();\n    },\n    browser: function browser() {\n        var result = \"\";\n        var browser = navigator.appVersion;\n\n        // 判断是否为 IE 系.\n        if (window.ScriptEngine || browser.indexOf(\"Trident\") > -1) {\n            // IE9.\n            if (browser.indexOf(\"MSIE 9.0\") > -1) result = \"IE 9\";\n\n            // IE Morden.\n            if (browser.indexOf(\"MSIE 10.0\") > -1 || browser.indexOf(\"Trident/7.0\") > -1 && browser.indexOf(\"rv:11.0\") > -1) result = \"IE Modern\";\n\n            // Edge.\n            if (browser.indexOf(\"Edge\") > -1) result = \"Edge\";\n        } else if (browser.indexOf(\"Chrome/\") > -1) {\n            result = \"Chrome\";\n        }\n\n        return result;\n    },\n    strip: function strip(str, target) {\n        return str.replace(new RegExp(\"\" + target, \"g\"), \"\");\n    },\n    findFilter: function findFilter(directive) {\n        directive = _.strip(directive, \" \");\n        directive = directive.match(/\\|\\S*/);\n        if (_.typeof(directive) === \"array\" && directive[0]) directive = directive[0].replace(\"|\", \"\");\n        return directive;\n    },\n    removeFilter: function removeFilter(directive) {\n        return directive.substr(0, directive.indexOf(\"|\") - 1);\n    }\n};\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.$directivesDataSync = $directivesDataSync;\n/*\r\n *  Controller Data Sync Function by LancerComet at 15:10, 2016/6/4.\r\n *  # Carry Your World #\r\n *  ---\r\n *  控制器内部指令数据同步方法.\r\n *  在控制器初始化时进行 set 定义时被设置为 setCallback.\r\n */\n\nfunction $directivesDataSync(scope, expr, oldValue, newValue) {\n  console.log(scope.$name + \".\" + expr + \" 从 \" + oldValue + \" 修改为 \" + newValue);\n  scope.$directives.forEach(function (directiveObj, index, $directives) {\n    return directiveObj.$expr === expr && directiveObj.$update(newValue);\n  });\n}\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.controller = undefined;\n\nvar _2 = require(\"../_/_\");\n\nexports.controller = controller;\n\n// Definition: 框架控制器定义函数.\n// lc.controller(\"ctrlName\", [\"moduleA\"], function (scope) {})\n// Lancer Frame V0.0.1 By LancerComet at 15:39, 2016.06.02.\n// # Carry Your World #\n\nfunction controller($lc) {\n    \"use strict\";\n\n    $lc.controllers = {};\n    $lc.controller = function (ctrlName, dependencies, initFunc) {\n        // @ params: 模块名称, 依赖模块, 模块初始化函数.\n        if (_2._.typeof(dependencies) !== \"array\") {\n            initFunc = dependencies;\n            dependencies = [];\n        }\n\n        // 定义控制器作用域对象.\n        // 对象将在之后加载用户属性.\n        $lc.controllers[ctrlName] = {\n            $name: ctrlName,\n            $initFunc: initFunc,\n            $dependencies: dependencies // 依赖控制器.\n        };\n    };\n}\n\n},{\"../_/_\":1}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.directive = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\n// # Carry Your World #\n// ---\n// 指令定义方法.\n// 本方法用于定义指令.\n\nvar _2 = require(\"../_/_\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.directive = directive;\n\n\nfunction directive($lc) {\n    $lc.directives = {};\n\n    // 定义指令存储数组.\n    $lc.directive = function (name, options) {\n\n        /*\r\n         * @ name: String,\r\n         * @ options: {\r\n         *       $init: function (element, scope),  // 指令初始化时执行.\r\n         *       $done: Function,  // 指令初始化完毕后执行.\r\n         *       $update: Function,  // 指令节点进行更新时执行.\r\n         *       $destory: Function  // 指令在销毁时执行.\r\n         *   }\r\n         */\n\n        if (_2._.typeof(name) !== \"string\") {\n            throw new Error(\"自定义指令时必须使用字符串作为指令名称.\");\n        }\n\n        // 将指令登记到 $lc.directives 中.\n        // 登记过的指令是一个 Class, 用于在节点初始化的时候生成指令对象并存储到控制器的 scope.$directives 中.\n        // 这样就可以不依赖 HTML 上的属性了.\n        $lc.directives[\"lc-\" + name] = function () {\n            function _class(element, scope) {\n                _classCallCheck(this, _class);\n\n                this.$element = element;\n                this.$scope = scope;\n                this.$directiveName = \"lc-\" + name;\n                this.$expr = this.$element.attributes[this.$directiveName].value;\n\n                options.$init && options.$init.call(this, this.$element, this.scope);\n\n                // 处理多态.(如果 options 传来指定方法)\n                if (options.$done) {\n                    var _$done = this.$done;\n                    _$done.call(this);\n                    options.$done.call(this); // 执行自定义 $done.\n                } else {\n                        this.$done.call(this);\n                    }\n\n                if (options.$update) {\n                    var _$update = this.$update;\n                    this.$update = function () {\n                        _$update.call(this);\n                        options.$update.apply(this, arguments);\n                    };\n                }\n\n                if (options.$destory) {\n                    var _$destory = this.$destory;\n                    this.$destory = function () {\n                        _$destory.call(this);\n                        options.$destory.apply(this, arguments);\n                    };\n                }\n\n                this.$removeDirective();\n            }\n\n            _createClass(_class, [{\n                key: \"$done\",\n                value: function $done() {\n                    // 好像没碉用？\n                }\n            }, {\n                key: \"$update\",\n                value: function $update() {}\n            }, {\n                key: \"$destory\",\n                value: function $destory() {}\n\n                // 删除节点指令标识.\n\n            }, {\n                key: \"$removeDirective\",\n                value: function $removeDirective() {\n                    this.$element.removeAttribute(this.$directiveName);\n                }\n            }]);\n\n            return _class;\n        }();\n\n        // 设置优先级.\n        // 优先级为 10000 的指令仅仅初始化其自身, 无视其他指令.\n        $lc.directives[\"lc-\" + name].priority = options.priority || 1;\n    };\n}\n\n},{\"../_/_\":1}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.internalDirectives = undefined;\n\nvar _2 = require(\"../_/_\");\n\nexports.internalDirectives = internalDirectives; /*\r\n                                                  *  LancerFrame Internal Directives by LancerComet at 10:39, 2016/6/3.\r\n                                                  *  # Carry Your World #\r\n                                                  *  ---\r\n                                                  *  内置指令定义.\r\n                                                  */\n\nfunction internalDirectives($lc, undefined) {\n\n    // lc-skip\n    $lc.directive(\"skip\", { priority: 10000 });\n\n    // lc-cloak\n    $lc.directive(\"cloak\", {\n        priority: 0,\n        $done: function $done() {\n            this.$element.removeAttribute(this.$directiveName);\n        }\n    });\n\n    // lc-text\n    (function () {\n        $lc.directive(\"text\", {\n            $init: function $init() {\n                setInnterText.call(this);\n            },\n            $update: function $update(newValue) {\n                setInnterText.call(this, newValue);\n            }\n        });\n\n        function setInnterText(value) {\n            if (value === undefined) {\n                value = this.$scope[this.$expr] || \"\";\n            }\n            if (this.$element.textContent !== undefined) {\n                this.$element.textContent = value;\n            } else {\n                this.$element.innerText = value;\n            }\n        }\n    })();\n\n    // lc-html\n    (function () {\n        $lc.directive(\"html\", {\n            $done: func,\n            $update: func\n        });\n\n        function func(value) {\n            if (_2._.typeof(value) === \"undefined\") value = \"\";\n            this.$element.innerHTML = value;\n        }\n    })();\n\n    // lc-model\n    $lc.directive(\"model\", {\n        $init: function $init() {\n            var _this = this;\n\n            var self = this,\n                element = this.$element,\n                scope = this.$scope,\n                imeIgnored = false;\n\n            this.duplexIgnored = false; // 当用户处于输入状态时无视双向绑定.\n\n            // 进入输入法输入状态时锁定控制标识.\n            $lc.on(element, \"compositionstart\", function () {\n                imeIgnored = true;\n            });\n\n            // 当输入法状态恢复时释放控制标识.\n            $lc.on(element, \"compositionend\", function () {\n                imeIgnored = false;\n            });\n\n            // 进入激活状态时无视双向绑定.\n            $lc.on(element, \"focus\", function () {\n                return _this.duplexIgnored = true;\n            });\n\n            $lc.on(element, \"blur\", function () {\n                return _this.duplexIgnored = false;\n            });\n\n            element.addEventListener(\"input\", inputEvent, false);\n\n            // Fixing: IE9 在 Backspace / Delete / 剪切时不触发 input 事件.\n            // http://frontenddev.org/article/compatible-with-processing-and-chinese-input-method-to-optimize-the-input-events.html\n            if ($lc.BROWSER === \"IE 9\") {\n                $lc.on(element, \"cut\", function () {\n                    return setTimeout(inputEvent, 1);\n                }); // 必须放置在任务队列中才生效.\n                $lc.on(element, \"keyup\", function (event) {\n                    event = event || window.event;\n                    (event.keyCode === 46 || event.keyCode === 8) && inputEvent();\n                });\n            }\n\n            function inputEvent() {\n                if (imeIgnored) {\n                    return;\n                }\n                scope[self.$expr] = element.value;\n            }\n        },\n\n        $update: function $update(newValue) {\n            if (this.duplexIgnored) return;\n            this.$element.value = newValue;\n        },\n\n        $done: function $done() {\n            this.$element.value = this.$scope[this.$expr];\n        }\n\n    });\n\n    // lc-mouse events.\n    (function () {\n        function initEvent(eventType) {\n            this[\"$\" + eventType] = this.$scope[this.$expr];\n            $lc.on(this.$element, eventType, this[\"$\" + eventType]);\n        }\n\n        function updateEvent(eventType, newFunc) {\n            $lc.off(this.$element, eventType, this[\"$\" + eventType]);\n            this[\"$\" + eventType] = newFunc;\n            $lc.on(this.$element, eventType, this[\"$\" + eventType]);\n        }\n\n        $lc.directive(\"mouseenter\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseenter\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseenter\", newFunc);\n            }\n        });\n\n        $lc.directive(\"mouseleave\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseleave\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseleave\", newFunc);\n            }\n        });\n\n        $lc.directive(\"mouseover\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseover\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseover\", newFunc);\n            }\n        });\n\n        $lc.directive(\"mouseout\", {\n            $done: function $done() {\n                initEvent.call(this, \"mouseout\");\n            },\n            $update: function $update(newFunc) {\n                updateEvent.call(this, \"mouseout\", newFunc);\n            }\n        });\n    })();\n\n    // lc-click\n    $lc.directive(\"click\", {\n        $init: function $init() {\n            // 处理事件委托属性.\n            if (this.$expr.indexOf(\"|\") > -1) {\n                this.$delegatedElement = _2._.findFilter(this.$expr);\n                this.$expr = _2._.removeFilter(this.$expr);\n                this.$targets = this.$element.querySelectorAll(this.$delegatedElement);\n            }\n        },\n        $done: function $done() {\n            var self = this;\n\n            // 事件委托.\n            if (this.$delegatedElement) {\n\n                this.$clickEvent = function (event) {\n                    event = window.event || event;\n                    var target = event.target || event.srcElement;\n\n                    // 判断 target 是不是想要的元素并返回结果.\n                    var targetThis = targetChecking.call(self, target);\n\n                    if (target === self.$element || targetThis === false) return; // 如果点击到了委托容器 || 循环到了委托容器则退出.\n                    self.$scope[self.$expr].apply(targetThis, arguments);\n                    // console.log(`time takes ${end - start}`);  // 十五层节点嵌套大概需要 0.2 秒.\n                };\n\n                // 无委托.\n            } else {\n                    this.$clickEvent = function () {\n                        self.$scope[self.$expr].apply(this, arguments);\n                    };\n                }\n\n            $lc.on(this.$element, \"click\", this.$clickEvent);\n        },\n\n        $update: function $update(newValue) {\n            $lc.off(this.$element, \"click\", this.$clickEvent);\n            var self = this;\n\n            // 事件委托.\n            if (this.$delegatedElement) {\n\n                this.$clickEvent = function (event) {\n                    event = window.event || event;\n                    var target = event.target || event.srcElement;\n\n                    // 判断 target 是不是想要的元素并返回结果.\n                    var targetThis = targetChecking.call(self, target);\n\n                    if (target === self.$element || targetThis === false) return; // 如果点击到了委托容器则退出.\n                    newValue.apply(targetThis, arguments);\n                };\n\n                // 无委托.\n            } else {\n                    this.$clickEvent = function () {\n                        newValue.apply(this, arguments);\n                    };\n                }\n\n            $lc.on(this.$element, \"click\", this.$clickEvent);\n        }\n    });\n}\n\n// 判断点击事件是否为需要的元素.\nfunction targetChecking(target) {\n    if (target === this.$element) return false; // 如果递归到 lc-click 指令元素本身则退出.\n    var found = false;\n    for (var i = 0, length = this.$targets.length; i < length; i++) {\n        if (target !== this.$targets[i]) continue;\n        found = true;\n        return target;\n    }\n    if (!found) return targetChecking.call(this, target.parentNode);\n}\n\n},{\"../_/_\":1}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.domInit = undefined;\n\nvar _$directivesDataSync = require(\"../controller/$directives-data-sync\");\n\nexports.domInit = domInit;\n\n// 开始初始化页面节点.\n// Lancer Frame V0.0.1 By LancerComet at 15:00, 2016.06.02.\n// # Carry Your World #\n// ---\n// 节点初始化逻辑.\n\nfunction domInit($lc) {\n    \"use strict\";\n\n    // 初始化所有控制器节点.\n\n    var _loop = function _loop(controller) {\n        if (!$lc.controllers.hasOwnProperty(controller)) return \"continue\";\n\n        (function () {\n            var ctrl = controller; // 创建闭包修复嵌套控制器初始化问题.\n            var scope = $lc.controllers[ctrl];\n            /*\r\n            * @ scope: {\r\n            *     $name: 控制器名称,\r\n            *     $directives: 子节点指令对象, 用户数据同步.\r\n            *     ... (其他用户定义属性)\r\n            * } \r\n            */\n\n            // 保存控制器节点.\n            if (!scope.$ctrlDoms) {\n                scope.$ctrlDoms = document.querySelectorAll(\"[lc-controller=\" + scope.$name + \"]\");\n            }\n\n            // 创建控制器下的指令节点对象至数组 $directives 中.\n            if (!scope.$directives) {\n                scope.$directives = [];\n            }\n\n            // 初始化控制器对象.\n            // 设置双向数据绑定.\n            scope.$initFunc && function () {\n\n                // 引入依赖控制器.\n                var $dependencies = []; // 依赖存放数组.\n                if (scope.$dependencies) {\n                    scope.$dependencies.forEach(function (dependency, index, dependencies) {\n                        $dependencies[index] = $lc.controllers[dependency] ? $lc.controllers[dependency] : $lc.services[dependency] ? $lc.services[dependency] : null; // 控制器 > 服务 > null.\n                    });\n                }\n\n                scope.$initFunc.apply(scope, [scope].concat($dependencies)); // 将控制器对象放入 initFunc 中执行. 将加载用户属性.\n\n                // 为每个用户定义的属性设置 get / set.\n                for (var prop in scope) {\n                    if (!scope.hasOwnProperty(prop) || prop === \"$name\" || prop === \"$directives\" || prop === \"$initFunc\" || prop === \"$ctrlDoms\" || prop === \"$dependencies\") {\n                        continue;\n                    }\n\n                    // 监视 scope 中的属性.\n                    $lc.observe(scope, prop, null, _$directivesDataSync.$directivesDataSync);\n                }\n            }();\n\n            // 初始化控制器节点与其子节点, 建立指令对象并推入 $directives.\n\n            var _loop2 = function _loop2(i, length) {\n                directivesOfCtrl = $lc.getDirectives(scope.$ctrlDoms[i]);\n\n                // 处理控制器上的额外指令.\n\n                if (directivesOfCtrl) {\n                    directivesOfCtrl.forEach(function (directive, index, directives) {\n                        if (directive === \"lc-cloak\") return; // lc-cloak 放至最后处理.\n                        $lc.directives[directive] && new $lc.directives[directive](scope.$ctrlDoms[i]);\n                    });\n                }\n\n                initController(scope.$ctrlDoms[i], scope);\n\n                // 控制器节点处理完之后修改 lc-controller. 就是方便查看是不是初始化完毕了.\n                scope.$ctrlDoms[i].setAttribute(\"lc-ctrl\", scope.$name);\n                scope.$ctrlDoms[i].removeAttribute(\"lc-controller\");\n                scope.$ctrlDoms[i].removeAttribute(\"lc-cloak\");\n            };\n\n            for (var i = 0, length = scope.$ctrlDoms.length; i < length; i++) {\n                var directivesOfCtrl;\n\n                _loop2(i, length);\n            }\n        })();\n    };\n\n    for (var controller in $lc.controllers) {\n        var _ret = _loop(controller);\n\n        if (_ret === \"continue\") continue;\n    }\n\n    // Definition: 初始化控制器内的子节点指令.\n    function initController(ctrlDom, scope) {\n\n        (function initChilden(ctrlChildren) {\n\n            for (var i = 0, length = ctrlChildren.length; i < length; i++) {\n                var child = ctrlChildren[i];\n\n                // 避开嵌套控制器.\n                if (child.attributes[\"lc-controller\"]) {\n                    return;\n                }\n\n                // 获取节点上注册的指令.\n                var directiveList = $lc.getDirectives(child);\n\n                // 初始化指令.\n                for (var _i = 0, _length = directiveList.length; _i < _length; _i++) {\n                    scope.$directives.push(new $lc.directives[directiveList[_i]](child, scope)); // 创建指令对象并推入控制器下的 $directives.\n\n                    // 当出现优先级为 10000 的指令时仅仅初始化自身, 中止执行.\n                    if ($lc.directives[directiveList[_i]].priority === 10000) {\n                        break;\n                    }\n                }\n\n                if (child.children.length > 0) {\n                    initChilden(child.children); // 多层嵌套子元素.\n                }\n            }\n\n            // 初始化指令.\n        })(ctrlDom.children);\n    }\n}\n\n},{\"../controller/$directives-data-sync\":2}],7:[function(require,module,exports){\n\"use strict\";\n\nvar _2 = require(\"./_/_\");\n\nvar _main = require(\"./static-func/_main\");\n\nvar _controller = require(\"./controller/controller\");\n\nvar _directive = require(\"./directives/directive\");\n\nvar _service = require(\"./service/service\");\n\nvar _internalDirectives = require(\"./directives/internal-directives\");\n\nvar _internalService = require(\"./service/internal-service\");\n\nvar _main2 = require(\"./dom-init/_main\");\n\n// Lancer Frame V0.0.1 By LancerComet at 16:44, 2016.02.29.\n// # Carry Your World #\n\n(function (root, undefined) {\n    \"use strict\";\n\n    var $lc = {};\n\n    // Definition: 常量定义区.\n    // =================================\n    $lc.VERSION = \"0.0.1\";\n    $lc.AUTHOR = \"LancerComet\";\n    $lc.BROWSER = _2._.browser();\n\n    // Definition: 初始化框架模块.\n    // =================================\n    (0, _main.setStaticFunc)($lc); // 初始化静态方法.\n    (0, _controller.controller)($lc); // 初始化控制器逻辑.\n    (0, _directive.directive)($lc); // 初始化指令定义函数.\n    (0, _service.service)($lc); // 初始化服务函数.\n\n    // Definition: 框架初始化.\n    // =================================\n    // 让框架在 DomContentLoaded 时进行初始化.\n    // 如果没赶上, 则在 window.onload 时进行.\n    // 如果还没赶上, 检测 document.readyState 是否为 complete, 是则直接执行.\n    (function () {\n        $lc.inited = false;\n\n        $lc.on(window, \"DOMContentLoaded\", function () {\n            if ($lc.inited) return;\n            initAfterDomReady();\n            $lc.inited = true;\n        });\n\n        $lc.on(window, \"load\", function () {\n            if ($lc.inited) return;\n            initAfterDomReady();\n            $lc.inited = true;\n        });\n\n        setTimeout(function () {\n            document.readyState === \"complete\" && function () {\n                if ($lc.inited) return;\n                initAfterDomReady();\n                $lc.inited = true;\n            }();\n        }, 1);\n    })();\n\n    // Definition: 将 LancerFrame 挂载至全局环境.\n    // =================================\n    root.LancerFrame = root.$lc = $lc;\n\n    /* Definiton goes below. */\n\n    // Definiiton: 框架初始化函数.\n    // =================================\n    function initAfterDomReady() {\n        (0, _internalDirectives.internalDirectives)($lc); // 初始化内置指令.\n        (0, _internalService.internalSerivces)($lc); // 初始化内置服务.\n        (0, _main2.domInit)($lc); // 扫描文档结构.\n    }\n})(window);\n\n},{\"./_/_\":1,\"./controller/controller\":3,\"./directives/directive\":4,\"./directives/internal-directives\":5,\"./dom-init/_main\":6,\"./service/internal-service\":8,\"./service/service\":9,\"./static-func/_main\":10}],8:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.internalSerivces = internalSerivces;\n/*\r\n *  LancerFrame Internal Service by LancerComet at 12:06, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  内置服务定义.\r\n */\n\nfunction internalSerivces($lc) {\n\n    // $q. Promise 封装, 暂不做任何兼容处理.\n    (function () {\n        if (!window.Promise) return;\n        $lc.service(\"$q\", function () {\n            return function (asyncFunc) {\n                return new Promise(function (resolve, reject) {\n                    asyncFunc && asyncFunc(resolve, reject);\n                });\n            };\n        });\n    })();\n\n    // $http.\n    $lc.service(\"$http\", function () {\n        return {\n            get: function get(url, data) {},\n            post: function post(url, data) {},\n            jsonp: function jsonp(url, data, callbackName, callback) {}\n        };\n    });\n}\n\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.service = service;\n/*\r\n *  LancerFrame Serivce Module By LancerComet at 11:14, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.service 静态方法.\r\n */\n\nfunction service($lc) {\n\n    $lc.services = {};\n\n    $lc.service = function (name, initFunc) {\n        $lc.services[name] = initFunc();\n    };\n}\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setStaticFunc = undefined;\n\nvar _observe = require(\"./observe\");\n\nvar _getDirectives = require(\"./get-directives\");\n\nvar _css = require(\"./css\");\n\nvar _onOff = require(\"./on-off\");\n\n// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\n// # Carry Your World #\n\nexports.setStaticFunc = staticFunc;\n\n\nfunction staticFunc($lc) {\n    (0, _observe.observe)($lc); // $lc.observe.\n    (0, _getDirectives.getDirectives)($lc); // $lc.getDirectives.\n    (0, _css.css)($lc); // $lc.css.\n    (0, _onOff.on)($lc); // $lc.on.\n    (0, _onOff.off)($lc); // $lc.off.\n}\n\n},{\"./css\":11,\"./get-directives\":12,\"./observe\":13,\"./on-off\":14}],11:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.css = css;\n// Lancer Frame V0.0.1 By LancerComet at 22:16, 2016.06.02.\n// # Carry Your World #\n// ---\n// CSS 设置方法\nfunction css($lc) {\n\n    $lc.css = function (element, prop, value) {\n        if (element.style.prop === undefined) return;\n        element.style.prop = value;\n    };\n};\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getDirectives = getDirectives;\n/*\r\n *  Get Directives Function By LancerComet at 14:45, 2016/6/6.\r\n *  # Carry Your World #\r\n *  ---\r\n *  获取节点指令.\r\n *  @ Array.\r\n */\n\nfunction getDirectives($lc) {\n\n    $lc.getDirectives = function (element) {\n        var directiveList = [];\n\n        // 获取指令属性.\n        for (var i = 0, length = element.attributes.length; i < length; i++) {\n            var directiveName = element.attributes[i].name; // 指令名称.\n            if (directiveName.indexOf(\"lc-\") < 0) {\n                continue;\n            }\n\n            // 如果 $lc.directives 中有相应指令则初始化指令.\n            if ($lc.directives[directiveName] /* && directiveExpr*/) {\n                    // 暂时取消 expr 的强制判断, 否则必须制定 expr, 有时候指令可能不想或不需要制定 expr, 观察功能是否正常.\n                    directiveList.push(directiveName);\n                }\n        }\n\n        // 为指令优先级进行排序.\n        for (var sortTime = 0, _length = directiveList.length; sortTime < _length; sortTime++) {\n            for (var _i = 0; _i < _length; _i++) {\n                if (_i === _length - 1) continue;\n                if ($lc.directives[directiveList[_i]].priority < $lc.directives[directiveList[_i + 1]].priority) {\n                    var swap = directiveList[_i];\n                    directiveList[_i] = directiveList[_i + 1];\n                    directiveList[_i + 1] = swap;\n                }\n            }\n        }\n\n        return directiveList;\n    };\n}\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.observe = observe;\n\nvar _2 = require(\"../_/_\");\n\nfunction observe($lc) {\n    (function (undefined) {\n        // 创建一个纯净的 undefined\n        $lc.observe = function (obj, prop, getCallback, setCallback) {\n            var propKey = prop,\n                propValue = obj[prop],\n                oldValue = obj[prop],\n                newValue = null;\n\n            if (propValue === undefined) {\n                console.error(\"不存在监听属性 \" + prop + \".\");\n                return;\n            }\n\n            if (getCallback && _2._.typeof(getCallback) !== \"function\") {\n                console.error(errorText(\"getCallback\"));\n                return;\n            }\n\n            if (setCallback && _2._.typeof(setCallback) !== \"function\") {\n                console.error(errorText(\"setCallback\"));\n                return;\n            }\n\n            Object.defineProperty(obj, propKey, {\n                get: function get() {\n                    getCallback && getCallback(oldValue, newValue);\n                    return propValue;\n                },\n\n                set: function set(newVal) {\n                    oldValue = propValue;\n                    newValue = newVal;\n                    propValue = newValue; // 用户修改值之后进行更新.\n                    setCallback && setCallback(obj, propKey, oldValue, newValue);\n                }\n            });\n        };\n    })();\n} /*\r\n   *  LancerFrame observe Function By LancerComet at 14:10, 2016.06.04.\r\n   *  # Carry Your World #\r\n   *  ---\r\n   *  $lc.observe 函数, 使用 get / set 进行数据监听.\r\n   */\n\nfunction errorText(type) {\n    return \"$lc.observe 注册 \" + type + \" 时类型必须为 Function.\";\n}\n\n},{\"../_/_\":1}],14:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.on = on;\nexports.off = off;\n/*\r\n *  LancerFrame on Function By LancerComet at 01:22, 2016.06.03.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.on\r\n */\n\nfunction on($lc) {\n    $lc.on = function (element, eventType, eventHanler, useCapture) {\n        if (element.addEventListener) {\n            element.addEventListener(eventType, eventHanler, useCapture || false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + eventType, eventHanler);\n        } else {\n            element[\"on\" + eventType] = eventHanler;\n        }\n    };\n}\n\nfunction off($lc) {\n    $lc.off = function (element, eventType, eventHanler, useCapture) {\n        if (element.removeEventListener) {\n            element.removeEventListener(eventType, eventHanler, useCapture || false);\n        } else if (element.detachEvent) {\n            element.detachEvent(\"on\" + eventType, eventHanler);\n        } else {\n            element[\"on\" + eventType] = null;\n        }\n    };\n}\n\n},{}]},{},[7])\n\n","// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// Internal Functions.\r\n\r\nexport const _ = {\r\n    typeof: (target) => Object.prototype.toString.call(target).match(/ \\S*/i)[0].replace(\" \", \"\").replace(\"]\", \"\").toLowerCase(),\r\n    browser: () => {\r\n        var result = \"\";\r\n        const browser = navigator.appVersion;\r\n\r\n        // 判断是否为 IE 系.\r\n        if (window.ScriptEngine || browser.indexOf(\"Trident\") > -1) {\r\n            // IE9.\r\n            if (browser.indexOf(\"MSIE 9.0\") > -1) result = \"IE 9\";\r\n\r\n            // IE Morden.\r\n            if (browser.indexOf(\"MSIE 10.0\") > -1 || (browser.indexOf(\"Trident/7.0\") > -1 && browser.indexOf(\"rv:11.0\") > -1)) result = \"IE Modern\";\r\n\r\n            // Edge.\r\n            if (browser.indexOf(\"Edge\") > -1) result = \"Edge\";\r\n        } else if (browser.indexOf(\"Chrome/\") > -1) {\r\n            result = \"Chrome\";\r\n        }\r\n\r\n        return result;\r\n    },\r\n    strip: (str, target) => str.replace(new RegExp(`${target}`, \"g\"), \"\"),\r\n    findFilter: directive => {\r\n        directive = _.strip(directive, \" \");\r\n        directive = directive.match(/\\|\\S*/);\r\n        if (_.typeof(directive) === \"array\" && directive[0]) directive = directive[0].replace(\"|\", \"\");\r\n        return directive;\r\n    },\r\n    removeFilter: directive => directive.substr(0, directive.indexOf(\"|\") - 1)\r\n};","/*\r\n *  Controller Data Sync Function by LancerComet at 15:10, 2016/6/4.\r\n *  # Carry Your World #\r\n *  ---\r\n *  控制器内部指令数据同步方法.\r\n *  在控制器初始化时进行 set 定义时被设置为 setCallback.\r\n */\r\n\r\nexport function $directivesDataSync (scope, expr, oldValue, newValue) {\r\n    console.log(`${scope.$name}.${expr} 从 ${oldValue} 修改为 ${newValue}`);\r\n    scope.$directives.forEach((directiveObj, index, $directives) => directiveObj.$expr === expr && directiveObj.$update(newValue));\r\n}","// Lancer Frame V0.0.1 By LancerComet at 15:39, 2016.06.02.\r\n// # Carry Your World #\r\n\r\nimport {_} from \"../_/_\"\r\nexport {controller}\r\n\r\n// Definition: 框架控制器定义函数.\r\n// lc.controller(\"ctrlName\", [\"moduleA\"], function (scope) {})\r\nfunction controller ($lc) {\r\n    \"use strict\";\r\n    \r\n    $lc.controllers = {};\r\n    $lc.controller = function (ctrlName, dependencies, initFunc) {\r\n        // @ params: 模块名称, 依赖模块, 模块初始化函数.\r\n        if (_.typeof(dependencies) !== \"array\") {\r\n            initFunc = dependencies;\r\n            dependencies = [];\r\n        }\r\n\r\n        // 定义控制器作用域对象.\r\n        // 对象将在之后加载用户属性.\r\n        $lc.controllers[ctrlName] = {\r\n            $name: ctrlName,\r\n            $initFunc: initFunc,\r\n            $dependencies: dependencies  // 依赖控制器.\r\n        };\r\n\r\n    };\r\n\r\n    \r\n}\r\n\r\n","// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// 指令定义方法.\r\n// 本方法用于定义指令.\r\n\r\nimport {_} from \"../_/_\"\r\n\r\nexport { directive }\r\n\r\nfunction directive ($lc) {\r\n    $lc.directives = {};\r\n\r\n    // 定义指令存储数组.\r\n    $lc.directive = function (name, options) {\r\n\r\n        /*\r\n         * @ name: String,\r\n         * @ options: {\r\n         *       $init: function (element, scope),  // 指令初始化时执行.\r\n         *       $done: Function,  // 指令初始化完毕后执行.\r\n         *       $update: Function,  // 指令节点进行更新时执行.\r\n         *       $destory: Function  // 指令在销毁时执行.\r\n         *   }\r\n         */\r\n\r\n        if (_.typeof(name) !== \"string\") {\r\n            throw new Error(`自定义指令时必须使用字符串作为指令名称.`);\r\n        }\r\n\r\n\r\n        // 将指令登记到 $lc.directives 中.\r\n        // 登记过的指令是一个 Class, 用于在节点初始化的时候生成指令对象并存储到控制器的 scope.$directives 中.\r\n        // 这样就可以不依赖 HTML 上的属性了.\r\n        $lc.directives[\"lc-\" + name] = class {\r\n            constructor (element, scope) {\r\n                this.$element = element;\r\n                this.$scope = scope;\r\n                this.$directiveName = `lc-${name}`;\r\n                this.$expr = this.$element.attributes[this.$directiveName].value;\r\n\r\n                options.$init && options.$init.call(this, this.$element, this.scope);\r\n\r\n                // 处理多态.(如果 options 传来指定方法)\r\n                if (options.$done) {\r\n                    var _$done = this.$done;\r\n                    _$done.call(this);\r\n                    options.$done.call(this);  // 执行自定义 $done.\r\n                } else {\r\n                    this.$done.call(this);\r\n                }\r\n\r\n                if (options.$update) {\r\n                    var _$update = this.$update;\r\n                    this.$update = function () {\r\n                        _$update.call(this);\r\n                        options.$update.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                if (options.$destory) {\r\n                    var _$destory = this.$destory;\r\n                    this.$destory = function () {\r\n                        _$destory.call(this);\r\n                        options.$destory.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                this.$removeDirective();\r\n            }\r\n\r\n            $done () {\r\n                // 好像没碉用？\r\n            }\r\n\r\n            $update () {\r\n            }\r\n\r\n            $destory () {\r\n\r\n            }\r\n\r\n            // 删除节点指令标识.\r\n            $removeDirective () {\r\n                this.$element.removeAttribute(this.$directiveName);\r\n            }\r\n\r\n        };\r\n\r\n        // 设置优先级.\r\n        // 优先级为 10000 的指令仅仅初始化其自身, 无视其他指令.\r\n        $lc.directives[\"lc-\" + name].priority = options.priority || 1;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n *  LancerFrame Internal Directives by LancerComet at 10:39, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  内置指令定义.\r\n */\r\nimport {_} from \"../_/_\"\r\nexport {internalDirectives}\r\n\r\nfunction internalDirectives ($lc, undefined) {\r\n\r\n    // lc-skip\r\n    $lc.directive(\"skip\", { priority: 10000 });\r\n\r\n    // lc-cloak\r\n    $lc.directive(\"cloak\", {\r\n        priority: 0,\r\n        $done: function () {\r\n            this.$element.removeAttribute(this.$directiveName);\r\n        }\r\n    });\r\n\r\n    // lc-text\r\n    (() => {\r\n        $lc.directive(\"text\", {\r\n            $init: function () { setInnterText.call(this); },\r\n            $update: function (newValue) { setInnterText.call(this, newValue); }\r\n        });\r\n\r\n        function setInnterText (value) {\r\n            if (value === undefined) { value = this.$scope[this.$expr] || \"\"; }\r\n            if (this.$element.textContent !== undefined) {\r\n                this.$element.textContent = value;\r\n            } else {\r\n                this.$element.innerText = value;\r\n            }\r\n        }\r\n    })();\r\n\r\n    // lc-html\r\n    (() => {\r\n        $lc.directive(\"html\", {\r\n            $done: func,\r\n            $update: func\r\n        });\r\n\r\n        function func (value) {\r\n            if (_.typeof(value) === \"undefined\") value = \"\";\r\n            this.$element.innerHTML = value;\r\n        }\r\n    })();\r\n\r\n    // lc-model\r\n    $lc.directive(\"model\", {\r\n        $init: function () {\r\n            var self = this,\r\n                element = this.$element,\r\n                scope = this.$scope,\r\n                imeIgnored = false;\r\n\r\n            this.duplexIgnored = false;  // 当用户处于输入状态时无视双向绑定.\r\n\r\n            // 进入输入法输入状态时锁定控制标识.\r\n            $lc.on(element, \"compositionstart\", function () {\r\n                imeIgnored = true;\r\n            });\r\n\r\n            // 当输入法状态恢复时释放控制标识.\r\n            $lc.on(element, \"compositionend\", function () {\r\n                imeIgnored = false;\r\n            });\r\n\r\n            // 进入激活状态时无视双向绑定.\r\n            $lc.on(element, \"focus\", () => this.duplexIgnored = true);\r\n\r\n            $lc.on(element, \"blur\", () => this.duplexIgnored = false);\r\n\r\n            element.addEventListener(\"input\", inputEvent, false);\r\n\r\n            // Fixing: IE9 在 Backspace / Delete / 剪切时不触发 input 事件.\r\n            // http://frontenddev.org/article/compatible-with-processing-and-chinese-input-method-to-optimize-the-input-events.html\r\n            if ($lc.BROWSER === \"IE 9\") {\r\n                $lc.on(element, \"cut\", () => setTimeout(inputEvent, 1));  // 必须放置在任务队列中才生效.\r\n                $lc.on(element, \"keyup\", (event) => {\r\n                    event = event || window.event;\r\n                    (event.keyCode === 46 || event.keyCode === 8) && inputEvent();\r\n                });\r\n            }\r\n\r\n            function inputEvent () {\r\n                if (imeIgnored) { return; }\r\n                scope[self.$expr] = element.value;\r\n            }\r\n\r\n        },\r\n\r\n        $update: function (newValue) {\r\n            if (this.duplexIgnored) return;\r\n            this.$element.value = newValue;\r\n        },\r\n\r\n        $done: function () {\r\n            this.$element.value = this.$scope[this.$expr];\r\n        }\r\n\r\n    });\r\n\r\n    // lc-mouse events.\r\n    (() => {\r\n        function initEvent (eventType) {\r\n            this[`$${eventType}`] = this.$scope[this.$expr];\r\n            $lc.on(this.$element, eventType, this[`$${eventType}`]);\r\n        }\r\n\r\n        function updateEvent (eventType, newFunc) {\r\n            $lc.off(this.$element, eventType, this[`$${eventType}`]);\r\n            this[`$${eventType}`] = newFunc;\r\n            $lc.on(this.$element, eventType, this[`$${eventType}`]);\r\n        }\r\n\r\n        $lc.directive(\"mouseenter\", {\r\n            $done: function () { initEvent.call(this, \"mouseenter\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseenter\", newFunc); }\r\n        });\r\n\r\n        $lc.directive(\"mouseleave\", {\r\n            $done: function () { initEvent.call(this, \"mouseleave\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseleave\", newFunc); }\r\n        });\r\n\r\n        $lc.directive(\"mouseover\", {\r\n            $done: function () { initEvent.call(this, \"mouseover\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseover\", newFunc); }\r\n        });\r\n\r\n        $lc.directive(\"mouseout\", {\r\n            $done: function () { initEvent.call(this, \"mouseout\"); },\r\n            $update: function (newFunc) { updateEvent.call(this, \"mouseout\", newFunc); }\r\n        });\r\n    })();\r\n\r\n    // lc-click\r\n    $lc.directive(\"click\", {\r\n        $init: function () {\r\n            // 处理事件委托属性.\r\n            if (this.$expr.indexOf(\"|\") > -1) {\r\n                this.$delegatedElement = _.findFilter(this.$expr);\r\n                this.$expr = _.removeFilter(this.$expr);\r\n                this.$targets = this.$element.querySelectorAll(this.$delegatedElement);\r\n            }\r\n        },\r\n        $done: function () {\r\n            const self = this;\r\n\r\n            // 事件委托.\r\n            if (this.$delegatedElement) {\r\n\r\n                this.$clickEvent = function (event) {\r\n                    event = window.event || event;\r\n                    var target = event.target || event.srcElement;\r\n\r\n                    // 判断 target 是不是想要的元素并返回结果.\r\n                    var targetThis = targetChecking.call(self, target);\r\n\r\n                    if (target === self.$element || targetThis === false) return;  // 如果点击到了委托容器 || 循环到了委托容器则退出.\r\n                    self.$scope[self.$expr].apply(targetThis, arguments);\r\n                    // console.log(`time takes ${end - start}`);  // 十五层节点嵌套大概需要 0.2 秒.\r\n                };\r\n\r\n            // 无委托.\r\n            } else {\r\n                this.$clickEvent = function () { self.$scope[self.$expr].apply(this, arguments); };\r\n            }\r\n\r\n            $lc.on(this.$element, \"click\", this.$clickEvent);\r\n        },\r\n\r\n        $update: function (newValue) {\r\n            $lc.off(this.$element, \"click\", this.$clickEvent);\r\n            const self = this;\r\n\r\n            // 事件委托.\r\n            if (this.$delegatedElement) {\r\n\r\n                this.$clickEvent = function (event) {\r\n                    event = window.event || event;\r\n                    var target = event.target || event.srcElement;\r\n\r\n                    // 判断 target 是不是想要的元素并返回结果.\r\n                    var targetThis = targetChecking.call(self, target);\r\n\r\n                    if (target === self.$element || targetThis === false) return;  // 如果点击到了委托容器则退出.\r\n                    newValue.apply(targetThis, arguments);\r\n                };\r\n\r\n            // 无委托.\r\n            } else {\r\n                this.$clickEvent = function () { newValue.apply(this, arguments); };\r\n            }\r\n\r\n            $lc.on(this.$element, \"click\", this.$clickEvent);\r\n        }\r\n    });\r\n\r\n\r\n}\r\n\r\n// 判断点击事件是否为需要的元素.\r\nfunction targetChecking (target) {\r\n    if (target === this.$element) return false;  // 如果递归到 lc-click 指令元素本身则退出.\r\n    var found = false;\r\n    for (let i = 0, length = this.$targets.length; i < length; i++) {\r\n        if (target !== this.$targets[i]) continue;\r\n        found = true;\r\n        return target;\r\n    }\r\n    if (!found) return targetChecking.call(this, target.parentNode);\r\n}\r\n","// Lancer Frame V0.0.1 By LancerComet at 15:00, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// 节点初始化逻辑.\r\nimport {$directivesDataSync} from \"../controller/$directives-data-sync\"\r\nexport {domInit}\r\n \r\n// 开始初始化页面节点.\r\nfunction domInit ($lc) {\r\n    \"use strict\";\r\n    \r\n    // 初始化所有控制器节点.\r\n    for (let controller in $lc.controllers) {\r\n        if (!$lc.controllers.hasOwnProperty(controller)) continue;\r\n\r\n        (() => {\r\n            const ctrl = controller;  // 创建闭包修复嵌套控制器初始化问题.\r\n            var scope = $lc.controllers[ctrl];\r\n            /*\r\n            * @ scope: {\r\n            *     $name: 控制器名称,\r\n            *     $directives: 子节点指令对象, 用户数据同步.\r\n            *     ... (其他用户定义属性)\r\n            * } \r\n            */\r\n            \r\n            // 保存控制器节点.\r\n            if (!scope.$ctrlDoms) {\r\n                scope.$ctrlDoms = document.querySelectorAll(`[lc-controller=${scope.$name}]`);\r\n            }\r\n            \r\n            // 创建控制器下的指令节点对象至数组 $directives 中.\r\n            if (!scope.$directives) {\r\n                scope.$directives = [];            \r\n            }\r\n            \r\n\r\n            // 初始化控制器对象.\r\n            // 设置双向数据绑定.\r\n            scope.$initFunc && (() => {\r\n\r\n                // 引入依赖控制器.\r\n                var $dependencies = [];  // 依赖存放数组.\r\n                if (scope.$dependencies) {\r\n                    scope.$dependencies.forEach((dependency, index, dependencies) => {\r\n                        $dependencies[index] = $lc.controllers[dependency] ?　$lc.controllers[dependency] : ($lc.services[dependency] ? $lc.services[dependency] : null);  // 控制器 > 服务 > null.\r\n                    });\r\n                }\r\n\r\n                scope.$initFunc.apply(scope, [scope].concat($dependencies));  // 将控制器对象放入 initFunc 中执行. 将加载用户属性.\r\n                \r\n                // 为每个用户定义的属性设置 get / set.\r\n                for (let prop in scope) {\r\n                    if (!scope.hasOwnProperty(prop) \r\n                        || prop === \"$name\" \r\n                        || prop === \"$directives\" \r\n                        || prop === \"$initFunc\"\r\n                        || prop === \"$ctrlDoms\"\r\n                        || prop === \"$dependencies\"\r\n                    ) { continue; }\r\n                    \r\n                    // 监视 scope 中的属性.\r\n                    $lc.observe(scope, prop, null, $directivesDataSync);\r\n                }\r\n        \r\n            })();\r\n            \r\n            // 初始化控制器节点与其子节点, 建立指令对象并推入 $directives.\r\n            for (let i = 0, length = scope.$ctrlDoms.length; i < length; i++) {\r\n                var directivesOfCtrl = $lc.getDirectives(scope.$ctrlDoms[i]);\r\n\r\n                // 处理控制器上的额外指令.\r\n                if (directivesOfCtrl) {\r\n                    directivesOfCtrl.forEach((directive, index, directives) => {\r\n                        if (directive === \"lc-cloak\") return;  // lc-cloak 放至最后处理.\r\n                        $lc.directives[directive] && new $lc.directives[directive](scope.$ctrlDoms[i])\r\n                    });\r\n                }\r\n\r\n                initController(scope.$ctrlDoms[i], scope);\r\n\r\n                // 控制器节点处理完之后修改 lc-controller. 就是方便查看是不是初始化完毕了.\r\n                scope.$ctrlDoms[i].setAttribute(\"lc-ctrl\", scope.$name);\r\n                scope.$ctrlDoms[i].removeAttribute(\"lc-controller\");\r\n                scope.$ctrlDoms[i].removeAttribute(\"lc-cloak\");\r\n            }\r\n\r\n        })();\r\n    }\r\n    \r\n    // Definition: 初始化控制器内的子节点指令.\r\n    function initController (ctrlDom, scope) {\r\n\r\n        (function initChilden (ctrlChildren) {\r\n\r\n            for (let i = 0, length = ctrlChildren.length; i < length; i++) {\r\n                var child = ctrlChildren[i];\r\n\r\n                // 避开嵌套控制器.\r\n                if (child.attributes[\"lc-controller\"]) { return; }\r\n\r\n                // 获取节点上注册的指令.\r\n                var directiveList = $lc.getDirectives(child);\r\n\r\n                // 初始化指令.\r\n                for (let i = 0, length = directiveList.length; i < length; i++) {\r\n                    scope.$directives.push(new $lc.directives[directiveList[i]](child, scope));  // 创建指令对象并推入控制器下的 $directives.\r\n\r\n                    // 当出现优先级为 10000 的指令时仅仅初始化自身, 中止执行.\r\n                    if ($lc.directives[directiveList[i]].priority === 10000) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (child.children.length > 0) {\r\n                    initChilden(child.children);  // 多层嵌套子元素.\r\n                }\r\n            }\r\n\r\n            // 初始化指令.\r\n            \r\n        })(ctrlDom.children);\r\n        \r\n    }\r\n\r\n}","// Lancer Frame V0.0.1 By LancerComet at 16:44, 2016.02.29.\r\n// # Carry Your World #\r\n\r\nimport {_} from \"./_/_\"\r\n\r\nimport {setStaticFunc} from \"./static-func/_main\"\r\n\r\nimport {controller} from \"./controller/controller\"\r\nimport {directive} from \"./directives/directive\"\r\nimport {service} from \"./service/service\"\r\n\r\nimport {internalDirectives} from \"./directives/internal-directives\"\r\nimport {internalSerivces} from \"./service/internal-service\"\r\nimport {domInit} from \"./dom-init/_main\"\r\n\r\n(function (root, undefined) {\r\n    \"use strict\";\r\n    \r\n    var $lc = {};\r\n    \r\n    // Definition: 常量定义区.\r\n    // =================================\r\n    $lc.VERSION = \"0.0.1\";\r\n    $lc.AUTHOR = \"LancerComet\";\r\n    $lc.BROWSER = _.browser();\r\n\r\n\r\n    // Definition: 初始化框架模块.\r\n    // =================================\r\n    setStaticFunc($lc);  // 初始化静态方法.\r\n    controller($lc);  // 初始化控制器逻辑.\r\n    directive($lc);  // 初始化指令定义函数.\r\n    service($lc);  // 初始化服务函数.\r\n\r\n\r\n    // Definition: 框架初始化.\r\n    // =================================\r\n    // 让框架在 DomContentLoaded 时进行初始化.\r\n    // 如果没赶上, 则在 window.onload 时进行.\r\n    // 如果还没赶上, 检测 document.readyState 是否为 complete, 是则直接执行.\r\n    (() => {\r\n        $lc.inited = false;\r\n        \r\n        $lc.on(window, \"DOMContentLoaded\", () => {\r\n            if ($lc.inited) return;\r\n            initAfterDomReady();\r\n            $lc.inited = true;\r\n        });\r\n        \r\n        $lc.on(window, \"load\", () => {\r\n            if ($lc.inited) return;\r\n            initAfterDomReady();\r\n            $lc.inited = true;\r\n        });\r\n        \r\n        setTimeout(() => {\r\n            document.readyState === \"complete\" && (() => {\r\n                if ($lc.inited) return;\r\n                initAfterDomReady();\r\n                $lc.inited = true;\r\n            })();\r\n        }, 1);\r\n        \r\n    })();\r\n\r\n\r\n\r\n    // Definition: 将 LancerFrame 挂载至全局环境.\r\n    // =================================\r\n    root.LancerFrame = root.$lc = $lc;\r\n\r\n    /* Definiton goes below. */\r\n\r\n    // Definiiton: 框架初始化函数.\r\n    // =================================\r\n    function initAfterDomReady () {\r\n        internalDirectives($lc);  // 初始化内置指令.\r\n        internalSerivces($lc);  // 初始化内置服务.\r\n        domInit($lc);  // 扫描文档结构.\r\n    }\r\n\r\n\r\n})(window);","/*\r\n *  LancerFrame Internal Service by LancerComet at 12:06, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  内置服务定义.\r\n */\r\n\r\nexport function internalSerivces ($lc) {\r\n\r\n    // $q. Promise 封装, 暂不做任何兼容处理.\r\n    (() => {\r\n        if (!window.Promise) return;\r\n        $lc.service(\"$q\", function () {\r\n            return function (asyncFunc) {\r\n                return new Promise (function (resolve, reject) {\r\n                    asyncFunc && asyncFunc(resolve, reject);\r\n                });\r\n            }\r\n        });\r\n    })();\r\n\r\n\r\n    // $http.\r\n    $lc.service(\"$http\", function () {\r\n        return {\r\n            get: (url, data) => {\r\n\r\n            },\r\n            post: (url, data) => {\r\n\r\n            },\r\n            jsonp: (url, data, callbackName, callback) => {\r\n\r\n            }\r\n        }\r\n    });\r\n}","/*\r\n *  LancerFrame Serivce Module By LancerComet at 11:14, 2016/6/3.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.service 静态方法.\r\n */\r\n\r\nexport function service ($lc) {\r\n\r\n    $lc.services = {};\r\n\r\n    $lc.service = function (name, initFunc) {\r\n        $lc.services[name] = initFunc();\r\n    };\r\n\r\n}\r\n\r\n\r\n","// Lancer Frame V0.0.1 By LancerComet at 12:09, 2016.06.02.\r\n// # Carry Your World #\r\n\r\nexport { staticFunc as setStaticFunc }\r\n\r\n\r\nimport {observe} from \"./observe\"\r\nimport {getDirectives} from \"./get-directives\"\r\nimport {css} from \"./css\"\r\nimport {on} from \"./on-off\"\r\nimport {off} from \"./on-off\"\r\n\r\nfunction staticFunc ($lc) {\r\n    observe($lc);  // $lc.observe.\r\n    getDirectives($lc); // $lc.getDirectives.\r\n    css($lc);  // $lc.css.\r\n    on($lc); // $lc.on.\r\n    off($lc);  // $lc.off.\r\n}","// Lancer Frame V0.0.1 By LancerComet at 22:16, 2016.06.02.\r\n// # Carry Your World #\r\n// ---\r\n// CSS 设置方法\r\nexport function css ($lc) {\r\n    \r\n    $lc.css = function (element, prop, value) {\r\n        if (element.style.prop === undefined) return;\r\n        element.style.prop = value;\r\n    }   \r\n    \r\n};","/*\r\n *  Get Directives Function By LancerComet at 14:45, 2016/6/6.\r\n *  # Carry Your World #\r\n *  ---\r\n *  获取节点指令.\r\n *  @ Array.\r\n */\r\n\r\nexport function getDirectives ($lc) {\r\n\r\n    $lc.getDirectives = function (element) {\r\n        var directiveList = [];\r\n\r\n        // 获取指令属性.\r\n        for (let i = 0, length = element.attributes.length; i < length; i++) {\r\n            const directiveName = element.attributes[i].name;  // 指令名称.\r\n            if (directiveName.indexOf(\"lc-\") < 0) { continue; }\r\n\r\n            // 如果 $lc.directives 中有相应指令则初始化指令.\r\n            if ($lc.directives[directiveName]/* && directiveExpr*/) {  // 暂时取消 expr 的强制判断, 否则必须制定 expr, 有时候指令可能不想或不需要制定 expr, 观察功能是否正常.\r\n                directiveList.push(directiveName);\r\n            }\r\n        }\r\n\r\n        // 为指令优先级进行排序.\r\n        for (let sortTime = 0, length = directiveList.length; sortTime < length; sortTime++) {\r\n            for (let i = 0; i < length; i++) {\r\n                if (i === length - 1) continue;\r\n                if ($lc.directives[directiveList[i]].priority < $lc.directives[directiveList[i + 1]].priority) {\r\n                    var swap = directiveList[i];\r\n                    directiveList[i] = directiveList[i + 1];\r\n                    directiveList[i + 1] = swap;\r\n                }\r\n            }\r\n        }\r\n\r\n        return directiveList;\r\n    };\r\n\r\n}","/*\r\n *  LancerFrame observe Function By LancerComet at 14:10, 2016.06.04.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.observe 函数, 使用 get / set 进行数据监听.\r\n */\r\n\r\nimport {_} from \"../_/_\"\r\n\r\nexport function observe ($lc) {\r\n    ((undefined) => {  // 创建一个纯净的 undefined\r\n        $lc.observe = function (obj, prop, getCallback, setCallback) {\r\n            var propKey = prop,\r\n                propValue = obj[prop],\r\n                oldValue = obj[prop],\r\n                newValue = null;\r\n\r\n            if (propValue === undefined) {\r\n                console.error(`不存在监听属性 ${prop}.`);\r\n                return;\r\n            }\r\n\r\n            if (getCallback && _.typeof(getCallback) !== \"function\") {\r\n                console.error(errorText(\"getCallback\"));\r\n                return;\r\n            }\r\n\r\n            if (setCallback && _.typeof(setCallback) !== \"function\") {\r\n                console.error(errorText(\"setCallback\"));\r\n                return;\r\n            }\r\n\r\n            Object.defineProperty(obj, propKey, {\r\n                get: function () {\r\n                    getCallback && getCallback(oldValue, newValue);\r\n                    return propValue;\r\n                },\r\n\r\n                set: function (newVal) {\r\n                    oldValue = propValue;\r\n                    newValue = newVal;\r\n                    propValue = newValue;  // 用户修改值之后进行更新.\r\n                    setCallback && setCallback(obj, propKey, oldValue, newValue);\r\n                }\r\n            });\r\n        };\r\n    })();\r\n}\r\n\r\nfunction errorText (type) {\r\n    return `$lc.observe 注册 ${type} 时类型必须为 Function.`;\r\n}","/*\r\n *  LancerFrame on Function By LancerComet at 01:22, 2016.06.03.\r\n *  # Carry Your World #\r\n *  ---\r\n *  $lc.on\r\n */\r\n\r\nexport function on ($lc) {\r\n    $lc.on = function (element, eventType, eventHanler, useCapture) {\r\n        if (element.addEventListener) {\r\n            element.addEventListener(eventType, eventHanler, useCapture || false);\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent(`on${eventType}`, eventHanler);\r\n        } else {\r\n            element[`on${eventType}`] = eventHanler;\r\n        }\r\n    };\r\n}\r\n\r\nexport function off ($lc) {\r\n    $lc.off = function (element, eventType, eventHanler, useCapture) {\r\n        if (element.removeEventListener) {\r\n            element.removeEventListener(eventType, eventHanler, useCapture || false);\r\n        } else if (element.detachEvent) {\r\n            element.detachEvent(`on${eventType}`, eventHanler);\r\n        } else {\r\n            element[`on${eventType}`] = null;\r\n        }\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}